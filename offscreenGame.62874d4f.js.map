{"version":3,"sources":["messaging/canvasWorkerMessaging.ts","canvas/offscreenGame.tsx","../node_modules/parcel/src/builtins/bundle-url.js","../node_modules/parcel/src/builtins/bundle-loader.js","../node_modules/parcel/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"offscreenGame.62874d4f.js","sourceRoot":"../src","sourcesContent":["import {\n  jsonConverter,\n  voidConverter,\n  stringConverter,\n} from \"./valueConverters\";\nimport setupMessageChannel, { Converter } from \"./setupMessageChannel\";\n\nconst messagesToWorker = {\n  turn: {\n    serialize(value: { id: string; turn: number }) {\n      return `${value.id};${value.turn}`;\n    },\n    deserialize(value: string) {\n      const split = value.split(\";\");\n      return { id: split[0], turn: parseFloat(split[1]) };\n    },\n  },\n  run: voidConverter,\n  stop: voidConverter,\n  destroy: voidConverter,\n  inputSnakeData: jsonConverter as Converter<{ id: string; color: string }>,\n};\n\nconst messageFromWorker = {\n  snakeCollision: stringConverter,\n  canvasCreated: voidConverter,\n};\n\nfunction hijackWorker(worker: Worker | DedicatedWorkerGlobalScope) {\n  const workerOriginalHandler = worker.onmessage;\n  return setupMessageChannel({\n    send: worker.postMessage.bind(worker),\n    triggerReceive(trigger) {\n      worker.onmessage = (ev) => trigger(ev.data);\n    },\n    destroy() {\n      worker.onmessage = workerOriginalHandler;\n      // terminate();\n    },\n  });\n}\n\nexport function createChannelToWorker(\n  ...params: Parameters<typeof hijackWorker>\n) {\n  return hijackWorker(...params)(messagesToWorker, messageFromWorker);\n}\n\nexport function createChannelFromWorker(\n  ...params: Parameters<typeof hijackWorker>\n) {\n  return hijackWorker(...params)(messageFromWorker, messagesToWorker);\n}\n","import { createChannelToWorker } from \"../messaging/canvasWorkerMessaging\";\nimport snakeGameContext from \"./snakeGameContext\";\n\nconst worker = new Worker(\"./offscreenGameWorker.ts\");\n\nconst createOffScreenGame: Async<typeof snakeGameContext> = async (\n  canvas,\n  opts\n) => {\n  if (!(canvas instanceof HTMLCanvasElement)) {\n    throw new Error(\n      `Supplied canvas is of type ${canvas}, HTMLCanvasElement was expected. Only HTMLCanvasElement can be transferred offscreen`\n    );\n  }\n  const offscreenCanvas = canvas.transferControlToOffscreen();\n  worker.postMessage(offscreenCanvas, [offscreenCanvas]);\n  const channel = createChannelToWorker(worker);\n\n  //Create single listener for snake collisioners and use dict to store all snakes.\n  const snakeCollisionListeners = new Map<string, Function>();\n  channel.on(\"snakeCollision\", (id) => {\n    snakeCollisionListeners.get(id)?.();\n  });\n\n  return {\n    run() {\n      channel.send(\"run\", undefined);\n    },\n    stop() {\n      channel.send(\"stop\", undefined);\n    },\n    destroy() {\n      channel.send(\"destroy\", undefined);\n    },\n    inputSnakeData({ id, color, onCollision }) {\n      channel.send(\"inputSnakeData\", { id, color });\n      snakeCollisionListeners.set(id, onCollision);\n      return (turn: number) => {\n        channel.send(\"turn\", { id, turn });\n      };\n    },\n  };\n};\n\nexport default createOffScreenGame;\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}