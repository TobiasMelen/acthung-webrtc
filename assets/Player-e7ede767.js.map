{"version":3,"file":"Player-e7ede767.js","sources":["../../src/components/Triangle.tsx","../../src/components/PlayerControls.tsx","../../src/components/Input.tsx","../../src/components/Button.tsx","../../src/hooks/useConnectionForPlayer.ts","../../src/hooks/usePingLatency.ts","../../src/hooks/useStateForPlayer.tsx","../../assets/wilhelm.aac","../../src/components/Player.tsx"],"sourcesContent":["import { ComponentProps, useMemo } from \"react\";\nimport React from \"react\";\nimport { DEFAULT_COLOR } from \"../constants\";\n\nexport type TriangleDirection = \"up\" | \"down\" | \"left\" | \"right\";\n\ntype Props = {\n  strokeWidth?: number;\n  direction: TriangleDirection;\n} & ComponentProps<\"svg\">;\n\ntype Point = [number, number];\n\nexport default function Triangle({\n  direction,\n  fill,\n  stroke = DEFAULT_COLOR,\n  strokeWidth = 5,\n  ...props\n}: Props) {\n  const points = useMemo(() => {\n    const min = strokeWidth;\n    const half = 50;\n    const max = 100 - strokeWidth;\n    const points = ((): [Point, Point, Point] => {\n      switch (direction) {\n        case \"up\":\n          return [\n            [half, min],\n            [min, max],\n            [max, max]\n          ];\n        case \"down\":\n          return [\n            [min, min],\n            [max, min],\n            [half, max]\n          ];\n        case \"left\":\n          return [\n            [min, half],\n            [max, min],\n            [max, max]\n          ];\n        case \"right\":\n          return [\n            [min, min],\n            [min, max],\n            [max, half]\n          ];\n        default:\n          ((noValue: never) => {\n            throw new Error(`Can't draw triangle in direction \"${noValue}\"`);\n          })(direction);\n      }\n    })();\n    return points.join(\" \");\n  }, [direction, strokeWidth]);\n  return (\n    <svg viewBox=\"0 0 100 100\" style={{width: \"100%\", maxHeight: \"100%\", display: \"block\"}} {...props}>\n      <polygon\n        points={points}\n        strokeWidth={strokeWidth}\n        style={{\n          fill,\n          stroke,\n          strokeLinejoin: \"round\",\n          transition: \"fill 150ms ease-out\"\n        }}\n      />\n    </svg>\n  );\n}\n","import {\n  CSSProperties,\n  useState,\n  SyntheticEvent,\n  PropsWithChildren,\n} from \"react\";\nimport React from \"react\";\nimport Triangle, { TriangleDirection } from \"./Triangle\";\nimport useMediaMatch from \"../hooks/useMediaMatch\";\nimport Layout from \"./Layout\";\n\ntype Props = PropsWithChildren<{\n  latency?: number;\n  color: CSSProperties[\"color\"];\n  setTurn(turn: number): void;\n}>;\n\nexport default function PlayerControls({ setTurn, color, children }: Props) {\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [minusPressed, setMinusPressed] = useState(false);\n  const [plusPressed, setPlusPressed] = useState(false);\n  const arrowDirections = useMediaMatch<[TriangleDirection, TriangleDirection]>(\n    {\n      \"(orientation: landscape)\": [\"left\", \"right\"],\n      \"(orientation: portrait)\": [\"up\", \"down\"],\n    }\n  )[0];\n\n  // I \"layman benchmarked\" using hooks here.\n  // creating a memo with the same code and currentTurn as dep is moot since it's regenerated everytime this renders.\n  // the other option would be to wait until state commital before passing current turn to setTurn (online)\n  // state commits can happen with some delay however, and until this shows a performance issue i see no need.\n  const useInputHandlers = (\n    value: number,\n    setPress: (press: boolean) => void\n  ) => {\n    const handle = (press: boolean) => (ev: SyntheticEvent) => {\n      ev.preventDefault();\n      setPress(press);\n      const newTurnValue = currentTurn + (press ? value : -value);\n      setTurn(newTurnValue);\n      setCurrentTurn(newTurnValue);\n    };\n    return {\n      onPress: handle(true),\n      onRelease: handle(false),\n    };\n  };\n  const turnMinus = useInputHandlers(-1, setMinusPressed);\n  const turnPlus = useInputHandlers(1, setPlusPressed);\n\n  return (\n    <Layout style={{ justifyContent: \"space-between\" }}>\n      <TurnButton\n        color={color}\n        direction={arrowDirections?.[0] ?? \"left\"}\n        pressed={minusPressed}\n        handler={turnMinus}\n      />\n      <div>{children}</div>\n      <TurnButton\n        color={color}\n        direction={arrowDirections?.[1] ?? \"right\"}\n        pressed={plusPressed}\n        handler={turnPlus}\n      />\n    </Layout>\n  );\n}\n\nconst TurnButton = ({\n  color,\n  pressed,\n  handler,\n  direction,\n}: {\n  color?: string;\n  pressed: boolean;\n  direction: TriangleDirection;\n  handler: {\n    onPress(e: SyntheticEvent): void;\n    onRelease(e: SyntheticEvent): void;\n  };\n}) => (\n  <div\n    style={{\n      padding: \"0.5em\",\n      flexBasis: \"33%\",\n      alignSelf: \"stretch\",\n      WebkitUserSelect: \"none\",\n      touchAction: \"none\",\n      display: \"flex\",\n    }}\n    onTouchStart={handler.onPress}\n    onTouchEnd={handler.onRelease}\n  >\n    <Triangle\n      direction={direction}\n      stroke={color}\n      fill={pressed ? color : undefined}\n    />\n  </div>\n);\n","import { useMemoMerge } from \"../hooks/useMemoMerge\";\nimport React, { useMemo, CSSProperties, forwardRef } from \"react\";\nimport { DEFAULT_COLOR, DEFAULT_FONT_FAMILY } from \"../constants\";\n\nconst inputStyle = (color = DEFAULT_COLOR): CSSProperties => ({\n  width: \"100%\",\n  background: \"none\",\n  fontSize: \"2.8em\",\n  fontWeight: 900,\n  display: \"block\",\n  border: \"none\",\n  borderBottom: `5px solid ${color}`,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  borderRadius: 0,\n  textAlign: \"center\",\n  padding: \"0.5em 0\",\n  textTransform: \"uppercase\",\n  caretColor: color,\n});\n\nfunction Input(\n  props: React.ComponentProps<\"input\">,\n  ref: React.Ref<HTMLInputElement>\n) {\n  return (\n    <input\n      autoCapitalize=\"characters\"\n      type=\"text\"\n      ref={ref}\n      {...props}\n      style={useMemoMerge([\n        useMemo(() => inputStyle(props.style?.color), [props.style?.color]),\n        props.style\n      ])}\n    />\n  );\n}\n\nexport default forwardRef(Input);\n","import React, {\n  ComponentProps,\n  Ref,\n  CSSProperties,\n  useMemo,\n  forwardRef\n} from \"react\";\nimport { useMemoMerge } from \"../hooks/useMemoMerge\";\nimport { DEFAULT_COLOR, DEFAULT_FONT_FAMILY } from \"../constants\";\n\nconst buttonStyle = (color: string, disabled?: boolean): CSSProperties => ({\n  border: `5px solid ${color}`,\n  color,\n  borderRadius: \"1.5em\",\n  padding: \"0.5em 1.5em\",\n  fontWeight: 900,\n  fontSize: \"1.5em\",\n  fontFamily: DEFAULT_FONT_FAMILY,\n  opacity: disabled ? 0.3 : 1,\n  background: \"none\",\n  transition: \"color 175ms ease-out, border-color 175ms ease-out\"\n});\n\nfunction Button(\n  { color = DEFAULT_COLOR, ...props }: ComponentProps<\"button\">,\n  ref: Ref<HTMLButtonElement>\n) {\n  return (\n    <button\n      ref={ref}\n      {...props}\n      style={useMemoMerge([\n        useMemo(() => buttonStyle(color, props.disabled), [\n          color,\n          props.disabled\n        ]),\n        props.style\n      ])}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default forwardRef(Button);\n","import { useEffect, useState, useMemo } from \"react\";\nimport {\n  MessageChannelToLobby,\n  createMessageChannelToLobby,\n} from \"../messaging/dataChannelMessaging\";\nimport { DEFAULT_RTC_PEER_CONFIG, SIGNALING_URL } from \"../constants\";\nimport useJsonWebsocket from \"./useJsonWebsocket\";\nimport { uuidV4 } from \"../utility\";\n\ntype Props = {\n  lobbyName: string;\n};\n\ntype ConnectionStatus = \"CONNECTING\" | \"RECONNECTING\" | \"NO_LOBBY\" | \"ERROR\";\n\nexport default function useConnectionForPlayer({ lobbyName }: Props) {\n  const [lobbyMessageChannel, setLobbyMessageChannel] =\n    useState<MessageChannelToLobby>();\n  //Create id on client session to support reconnecting. This will be a secret between server/client.\n  const [playerId, isReconnect] = useMemo(() => {\n    const key = `playerId/${lobbyName}`;\n    const prevSessionId = sessionStorage[key];\n    if (prevSessionId) {\n      return [prevSessionId, true];\n    }\n    const sessionId = uuidV4();\n    sessionStorage[key] = sessionId;\n    return [sessionId, false];\n  }, [lobbyName]);\n\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>(\n    isReconnect ? \"RECONNECTING\" : \"CONNECTING\"\n  );\n\n  //only keep ws connection before webrtc is established\n  const socket = useJsonWebsocket(\n    lobbyMessageChannel == null ? `${SIGNALING_URL}/${playerId}` : undefined\n  );\n\n  useEffect(() => {\n    if (lobbyMessageChannel != null || socket.status != \"connected\") {\n      return;\n    }\n    const peerConnection = new RTCPeerConnection(DEFAULT_RTC_PEER_CONFIG);\n\n    const channel = peerConnection.createDataChannel(\"Client data channel\", {\n      maxRetransmits: 1,\n      ordered: false,\n    });\n    channel.onopen = () => {\n      const handles = createMessageChannelToLobby(peerConnection, channel);\n      setLobbyMessageChannel(handles);\n    };\n\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate != null) {\n        socket.send({\n          to: lobbyName,\n          from: playerId,\n          data: event.candidate.toJSON(),\n        });\n      }\n    };\n    peerConnection.oniceconnectionstatechange = () => {\n      const disconnect = () => {\n        setLobbyMessageChannel((channel) => {\n          channel?.destroy();\n          return undefined;\n        });\n        setConnectionStatus(\"ERROR\");\n      };\n      switch (peerConnection.iceConnectionState) {\n        case \"disconnected\":\n        case \"failed\": {\n          disconnect();\n          break;\n        }\n      }\n    };\n    let timeout: number;\n    socket.addListener(async ({ data }) => {\n      clearTimeout(timeout);\n      if (data.type === \"answer\") {\n        await peerConnection.setRemoteDescription(data);\n      } else if (\"candidate\" in data) {\n        await peerConnection.addIceCandidate(data);\n      }\n    });\n    peerConnection.createOffer().then(async (offer) => {\n      timeout = window.setTimeout(() => {\n        setConnectionStatus((connectionStatus) =>\n          connectionStatus !== \"ERROR\" ? \"NO_LOBBY\" : \"ERROR\"\n        );\n      }, 1000);\n      await peerConnection.setLocalDescription(offer);\n      socket.send({ data: offer, to: lobbyName, from: playerId });\n    });\n  }, [lobbyMessageChannel, lobbyName, socket]);\n\n  return [lobbyMessageChannel, connectionStatus] as const;\n}\n","import { useState, useEffect } from \"react\";\nimport { MessageChannel, Converter } from \"../messaging/setupMessageChannel\";\n\n//This is messed up, but by keeping sending ping packages over the channel, latency is keeped consistent and low.\n//If nothing is sent for a couple of deciseconds, latency will start to vary wildly.\n//This might have to do with my router (known to be shitty in the past)\nexport default function usePingLatency(\n  connection?: MessageChannel<\n    { ping: Converter<number> },\n    { ping: Converter<number> }\n  >,\n  tickRateMs = 100,\n  tickReportCount = 40\n) {\n  const [latency, setLatency] = useState<number>();\n  useEffect(() => {\n    if (connection == null) {\n      return;\n    }\n    let sentPings = 0;\n    let receivedPings = 0;\n    const pings = new Uint8Array(tickReportCount);\n    const pingInterval = window.setInterval(() => {\n      if (sentPings > receivedPings) {\n        //A ping is already out, skip sending new ones until it's back.\n        return;\n      }\n      connection.send(\"ping\", performance.now());\n      sentPings++;\n    }, tickRateMs);\n    connection.on(\"ping\", (timeStamp) => {\n      pings[receivedPings] = performance.now() - timeStamp;\n      receivedPings++;\n      if (receivedPings >= tickReportCount) {\n        setLatency(\n          Math.round(pings.reduce((acc, ping) => acc + ping, 0) / receivedPings)\n        );\n        receivedPings = 0;\n        sentPings = 0;\n      }\n    });\n    return () => {\n      window.clearInterval(pingInterval);\n      setLatency(undefined);\n    };\n  }, [connection, tickRateMs, tickReportCount]);\n  return latency;\n}\n","import { MessageChannelToLobby } from \"../messaging/dataChannelMessaging\";\nimport { Dispatch, SetStateAction, useState, useEffect, useMemo } from \"react\";\nimport usePingLatency from \"./usePingLatency\";\n\ntype SendType = Parameters<MessageChannelToLobby[\"send\"]>[0];\n\nconst createPlayerFunctions = (\n  setPlayerState: Dispatch<SetStateAction<PlayerState | undefined>>,\n  connection?: MessageChannelToLobby\n) => () => {\n  const sender = <TKey extends SendType>(\n    type: TKey,\n    stateKey?: keyof PlayerState\n  ) => (data: any) => {\n    //Optimistic updates if statekey provided\n    stateKey &&\n      setPlayerState(state => state && { ...state, [stateKey]: data });\n    connection?.send(\n      type,\n      data\n    );\n  };\n  return {\n    setName: sender(\"setName\", \"name\"),\n    setColor: sender(\"setColor\"),\n    setReady: sender(\"setReady\"),\n    setTurn: sender(\"turn\")\n  };\n};\n\nexport default function useStateForPlayer(connection?: MessageChannelToLobby) {\n  const latency = usePingLatency(connection);\n  const [playerState, setPlayerState] = useState<PlayerState>();\n  const [gameState, setGameState] = useState<GameState>();\n  useEffect(() => {\n    if (connection == null) {\n      return;\n    }\n\n    connection.on(\"playerState\", update =>\n      setPlayerState(\n        state =>\n          //assign undefined to the stateupdate and die.\n          ({ ...state, ...update } as PlayerState)\n      )\n    );\n    connection.on(\"gameState\", update =>\n      setGameState(\n        state =>\n          //same here.\n          ({ ...state, ...update } as GameState)\n      )\n    );\n  }, [connection]);\n\n  const playerFunctions = useMemo(\n    createPlayerFunctions(setPlayerState, connection),\n    [connection]\n  );\n  return [\n    playerState && { ...playerState, ...playerFunctions, latency },\n    gameState\n  ] as const;\n}\n","export default \"__VITE_ASSET__2d4db054__\"","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport PlayerControls from \"./PlayerControls\";\nimport PlayerLayout from \"./Layout\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport Banger from \"./Banger\";\nimport useConnectionForPlayer from \"../hooks/useConnectionForPlayer\";\nimport useStateForPlayer from \"../hooks/useStateForPlayer\";\nimport { match } from \"../utility\";\nimport wilhelm from \"../../assets/wilhelm.aac\";\n\ntype Props = {\n  lobbyName: string;\n};\n\ntype ClientPlayer = ReturnType<typeof useStateForPlayer>[0];\n\n// https://stackoverflow.com/a/54119854 ???\nconst AudioContext =\n  window.AudioContext ||\n  //@ts-ignore\n  window.webkitAudioContext;\nconst audioCtx = new AudioContext();\nconst deathscream = new Audio(wilhelm);\ndeathscream.load();\n\nexport default function Client({ lobbyName = \"new\" }: Props) {\n  const [channel, connectionStatus] = useConnectionForPlayer({ lobbyName });\n  const [player, gameState] = useStateForPlayer(channel);\n  useEffect(() => {\n    if (player?.state === \"dead\") {\n      deathscream.muted = false;\n      deathscream.volume = 0.3;\n      deathscream.playbackRate = 2 * Math.random() + 0.5;\n      deathscream.play();\n    }\n  }, [player?.state]);\n  const renderCore = useCallback(() => {\n    if (player == null || channel == null) {\n      return (\n        <Banger key={connectionStatus}>\n          {match(connectionStatus, {\n            CONNECTING: \"Connecting\",\n            RECONNECTING: \"Reconnecting\",\n            ERROR: (\n              <>\n                <span style={{ color: \"red\" }}>Error connecting!</span>\n                <br />\n                Make sure you are connected to the same Wifi as host.\n              </>\n            ),\n            NO_LOBBY: \"Lobby didn't respond 😞\",\n          })}\n        </Banger>\n      );\n    }\n    switch (player.state) {\n      case \"joining\":\n        return player.ready ? (\n          <Banger>Waiting. Look at big screen.</Banger>\n        ) : (\n          <EnterCreds\n            {...player}\n            colors={gameState?.colorAvailability}\n            onSubmit={() => {\n              deathscream.muted = true;\n              deathscream.play();\n            }}\n          />\n        );\n      case \"playing\":\n        return (\n          <PlayerControls\n            setTurn={player.setTurn}\n            color={player.color}\n            latency={player.latency}\n          />\n        );\n      case \"dead\":\n        return <Banger>You crashed</Banger>;\n    }\n  }, [player, gameState, connectionStatus]);\n  return (\n    <PlayerLayout>\n      <Latency latency={player?.latency} />\n      {renderCore()}\n    </PlayerLayout>\n  );\n}\n\nfunction EnterCreds({\n  colors = {},\n  ...props\n}: ClientPlayer & {\n  colors?: GameState[\"colorAvailability\"];\n  onSubmit?(): void;\n}) {\n  const [hasInput, setHasInput] = useState(false);\n  const hasDefaultName = !hasInput && props.name.startsWith(\"Player \");\n  const onChangeInput = useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setHasInput(true);\n      props.setName(ev.target.value);\n    },\n    [props.setName]\n  );\n  const inputRef = useRef<HTMLInputElement>(null);\n  return (\n    <article style={{ textAlign: \"center\", maxWidth: \"95%\", margin: \"auto 0\" }}>\n      <Input\n        ref={inputRef}\n        style={{ color: props.color, margin: \"1em auto\", maxWidth: \"75%\" }}\n        value={hasDefaultName ? \"\" : props.name}\n        onChange={onChangeInput}\n        placeholder={hasDefaultName ? props.name : \"\"}\n        maxLength={10}\n        autoCorrect=\"off\"\n        spellCheck={false}\n      />\n      <section\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n        }}\n      >\n        {Object.entries(colors).map(([color, available]) => {\n          const isPlayerColor = color === props.color;\n          return (\n            <figure\n              key={color}\n              onClick={() => available && props.setColor(color)}\n              style={{\n                boxSizing: \"border-box\",\n                width: 50,\n                height: 50,\n                margin: 15,\n                borderRadius: \"50%\",\n                background: color,\n                transform:\n                  isPlayerColor || !available\n                    ? `scale(${isPlayerColor ? 1.2 : 0.8})`\n                    : undefined,\n                transition:\n                  \"transform 150ms ease-out, box-shadow 150ms ease-out, opacity 75ms ease-out\",\n                opacity: isPlayerColor || available ? 1 : 0.2,\n                boxShadow: isPlayerColor\n                  ? \"inset 0 0 0 5px rgba(0,0,0,0.1)\"\n                  : \"none\",\n              }}\n            >\n              <figcaption style={{ visibility: \"hidden\" }}>{color}</figcaption>\n            </figure>\n          );\n        })}\n      </section>\n      <section style={{ marginTop: \"1.5em\" }}>\n        <Button\n          color={props.color}\n          disabled={!props.name}\n          onClick={() => {\n            props.onSubmit?.();\n            props.setReady(true);\n          }}\n        >\n          Ready!\n        </Button>\n      </section>\n    </article>\n  );\n}\n\nconst Latency = ({ latency }: { latency?: number }) =>\n  latency ? (\n    <span\n      style={{\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        WebkitUserSelect: \"none\",\n      }}\n    >\n      {latency} ms\n    </span>\n  ) : null;\n"],"names":["Triangle","direction","fill","stroke","DEFAULT_COLOR","strokeWidth","props","points","useMemo","min","half","max","noValue","React","PlayerControls","setTurn","color","children","currentTurn","setCurrentTurn","useState","minusPressed","setMinusPressed","plusPressed","setPlusPressed","arrowDirections","useMediaMatch","useInputHandlers","value","setPress","handle","press","ev","newTurnValue","turnMinus","turnPlus","Layout","TurnButton","pressed","handler","inputStyle","DEFAULT_FONT_FAMILY","Input","ref","useMemoMerge","_a","forwardRef","buttonStyle","disabled","Button","useConnectionForPlayer","lobbyName","lobbyMessageChannel","setLobbyMessageChannel","playerId","isReconnect","key","prevSessionId","sessionId","uuidV4","connectionStatus","setConnectionStatus","socket","useJsonWebsocket","SIGNALING_URL","useEffect","peerConnection","DEFAULT_RTC_PEER_CONFIG","channel","handles","createMessageChannelToLobby","event","disconnect","timeout","data","offer","usePingLatency","connection","tickRateMs","tickReportCount","latency","setLatency","sentPings","receivedPings","pings","pingInterval","timeStamp","acc","ping","createPlayerFunctions","setPlayerState","sender","type","stateKey","state","useStateForPlayer","playerState","gameState","setGameState","update","playerFunctions","wilhelm","AudioContext","deathscream","Client","player","renderCore","useCallback","Banger","match","EnterCreds","PlayerLayout","Latency","colors","hasInput","setHasInput","hasDefaultName","onChangeInput","inputRef","useRef","available","isPlayerColor"],"mappings":"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"}