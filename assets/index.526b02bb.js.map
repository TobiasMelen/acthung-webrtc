{"version":3,"file":"index.526b02bb.js","sources":["../../vite/preload-helper","../../src/hooks/useMemoMerge.ts","../../src/hooks/useMediaMatch.ts","../../src/components/Layout.tsx","../../src/components/Banger.tsx","../../src/components/App.tsx","../../src/index.tsx"],"sourcesContent":["let scriptRel;const seen = {};export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps) {\n        return baseModule();\n    }\n    // @ts-ignore\n    if (scriptRel === undefined) {\n        // @ts-ignore\n        const relList = document.createElement('link').relList;\n        // @ts-ignore\n        scriptRel =\n            relList && relList.supports && relList.supports('modulepreload')\n                ? 'modulepreload'\n                : 'preload';\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { useMemo, DependencyList } from \"react\";\n\nexport function useMemoMerge<Objects extends (object | undefined)[]>(\n  objects: Objects,\n  deps?: DependencyList\n) {\n  return useMemo(() => {\n    const nonNullObjects = objects.filter(obj => obj != null);\n    if (nonNullObjects.length <= 1) {\n      return nonNullObjects[0];\n    }\n    return Object.assign({}, ...nonNullObjects) as Objects[0];\n  }, deps ?? objects);\n}\n","import { useState, useMemo, useEffect } from \"react\";\n\nexport type MediaQueryMatch<TValue extends {}> = { [query: string]: TValue };\n\nexport default function useMediaMatch<TValue>(\n  matchObject: MediaQueryMatch<TValue>\n) {\n  const mediaQueries = useMemo(\n    () => Object.keys(matchObject).map(key => matchMedia(key)),\n    [matchObject]\n  );\n  const [matches, setMatches] = useState(\n    new Set<string>(\n      mediaQueries.filter(query => query.matches).map(query => query.media)\n    )\n  );\n  useEffect(\n    () =>\n      mediaQueries.forEach(query =>\n        query.addListener(ev =>\n          setMatches(matches => {\n            const op: (value: string) => void = ev.matches\n              ? matches.add\n              : matches.delete;\n            op.call(matches, ev.media);\n            //React-pleasing shallow-copy\n            return new Set(matches);\n          })\n        )\n      ),\n    [matchObject]\n  );\n  return useMemo(() => {\n    let result = [] as TValue[];\n    matches.forEach(match => {\n      const value = matchObject[match];\n      if (value != null) {\n        result.push(value);\n      }\n    });\n    return result;\n  }, [matches, matchObject]);\n}\n","import React, {\n  ComponentProps,\n  CSSProperties,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useMemoMerge } from \"../hooks/useMemoMerge\";\nimport useMediaMatch, { MediaQueryMatch } from \"../hooks/useMediaMatch\";\n\nconst containerStyle: CSSProperties = {\n  width: \"100vw\",\n  height: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  overflow: \"hidden\",\n};\n\nconst containerMediaStyle: MediaQueryMatch<CSSProperties> = {\n  \"(orientation: landscape)\": {\n    flexDirection: \"row\",\n    margin: \"0 auto\",\n    overflow: \"visible\",\n  },\n  \"(orientation: portrait)\": {\n    flexDirection: \"column\",\n  },\n};\n\nexport default function PlayerLayout(props: ComponentProps<\"main\">) {\n  const containerMediaMatchStyle = useMediaMatch(containerMediaStyle);\n  return (\n    <main\n      {...props}\n      style={useMemoMerge(\n        [containerStyle, ...containerMediaMatchStyle, props.style],\n        [containerMediaMatchStyle, props.style]\n      )}\n    />\n  );\n}\n","import {\n  PropsWithChildren,\n  CSSProperties,\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport PlayerLayout from \"./Layout\";\nimport React from \"react\";\n\nconst waitForRender = () =>\n  new Promise((resolve) =>\n    window.requestAnimationFrame(() => window.requestAnimationFrame(resolve))\n  );\nconst style: CSSProperties = {\n  textAlign: \"center\",\n  margin: \"0 auto\",\n};\n\ntype Props = PropsWithChildren<{\n  fixed?: boolean;\n  style?: CSSProperties;\n  startingEm?: number;\n}>;\n\nexport default function Banger({\n  children,\n  style: styleProp,\n  startingEm = 20,\n}: Props) {\n  const headingRef = useRef<HTMLHeadingElement>(null);\n  const [headingSize, setHeadingSize] = useState<number>();\n\n  const shrinkToFit = useCallback(() => {\n    async function shrink(em: number) {\n      if (headingRef.current == null) {\n        return;\n      }\n      headingRef.current.style.fontSize = `${em}em`;\n      const fits =\n        headingRef.current.clientHeight <= document.body.scrollHeight &&\n        headingRef.current.clientWidth <= document.body.clientWidth;\n      fits ? setHeadingSize(em) : shrink(em - 1);\n    }\n    shrink(startingEm);\n  }, [headingRef.current]);\n\n  useEffect(() => {\n    let timeout: number;\n    window.addEventListener(\"resize\", () => {\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(shrinkToFit, 500);\n    });\n    shrinkToFit();\n    return () => window.clearTimeout(timeout);\n  }, [shrinkToFit, startingEm]);\n\n  return (\n    <PlayerLayout>\n      <h1\n        style={{\n          ...styleProp,\n          ...style,\n          visibility: headingSize != null ? \"visible\" : \"hidden\",\n        }}\n        ref={headingRef}\n      >\n        {children}\n      </h1>\n    </PlayerLayout>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Banger from \"./Banger\";\n\nconst getHashValue = () =>\n  location.hash.startsWith(\"#\") ? location.hash.substring(1) : location.hash;\n\nexport default function App() {\n  //Simple hash routing since we're hosting on GH pages that can't reroute sub paths to index.html\n  const [hash, setHash] = useState(getHashValue());\n  useEffect(() => {\n    const hashListener = () => setHash(getHashValue());\n    addEventListener(\"hashchange\", hashListener);\n    return () => removeEventListener(\"hashchange\", hashListener);\n  }, []);\n\n  const [render, setRender] = useState<JSX.Element | null>(null);\n  useEffect(() => {\n    const match = async () => {\n      if (!window.RTCPeerConnection) {\n        return (\n          <Banger>\n            <span style={{ color: \"red\" }}>Sorry!</span>\n            <br />\n            Your browser must support{\" \"}\n            <a href=\"https://caniuse.com/?search=webrtc\">WebRTC</a>\n          </Banger>\n        );\n      }\n      if (hash.startsWith(\"lobby/\")) {\n        const lobbyName = hash.substring(\"lobby/\".length);\n        const { default: Lobby } = await import(\"./Lobby\");\n        return <Lobby lobbyName={lobbyName} />;\n      }\n      if (location.hash.length > 0) {\n        const { default: Player } = await import(\"./Player\");\n        return <Player lobbyName={hash} />;\n      }\n      //assume lobby\n      import(\"./Lobby\");\n      return (\n        <Banger>\n          New{\" \"}\n          <a href={`#lobby/${Math.random().toString(36).substring(8)}`}>\n            Lobby\n          </a>\n        </Banger>\n      );\n    };\n    match().then(setRender);\n  }, [hash]);\n\n  return render;\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nrender(<App />, document.getElementById(\"app-root\"));\n"],"names":["scriptRel","seen","__vitePreload","baseModule","deps","relList","document","createElement","supports","Promise","all","map","dep","isCss","endsWith","cssSelector","querySelector","link","rel","as","crossOrigin","href","head","appendChild","res","rej","addEventListener","then","objects","useMemo","nonNullObjects","filter","obj","length","Object","assign","matchObject","mediaQueries","keys","matchMedia","key","matches","setMatches","useState","Set","query","media","forEach","addListener","ev","matches2","add","delete","call","result","value","match","push","containerStyle","width","height","display","justifyContent","alignItems","overflow","containerMediaStyle","(orientation: landscape)","flexDirection","margin","(orientation: portrait)","props","containerMediaMatchStyle","useMediaMatch","__spreadProps","style","useMemoMerge","textAlign","children","styleProp","startingEm","headingRef","useRef","headingSize","setHeadingSize","shrinkToFit","useCallback","em","current","fontSize","clientHeight","body","scrollHeight","clientWidth","shrink","timeout","clearTimeout","window","setTimeout","PlayerLayout","visibility","ref","getHashValue","location","hash","startsWith","substring","setHash","hashListener","removeEventListener","render","setRender","async","RTCPeerConnection","Banger","color","lobbyName","default","Lobby","Player","Math","random","toString","App","getElementById"],"mappings":"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"}