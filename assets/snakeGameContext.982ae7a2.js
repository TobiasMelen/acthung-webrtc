var e=Object.assign;const n={serialize:JSON.stringify,deserialize:JSON.parse},o={serialize:String,deserialize:Number},i={serialize:String,deserialize:Boolean},t={serialize:e=>e,deserialize:e=>e},s={serialize:e=>e,deserialize:e=>e};function a(e){return(n,o,...i)=>{const t=new Set(i),s=new Map;return e.triggerReceive((n=>{var i;if("string"!=typeof n)return;const a=n.indexOf(";"),r=a&&n.substring(0,a);if(!r)return;t.has(r)&&e.send(n);const l=s.get(r);if(null==l?void 0:l.length){const e=null==(i=o[r])?void 0:i.deserialize(n.substring(a+1));l.forEach((n=>n(e)))}})),{send(o,i,...t){const s=`${o};${n[o].serialize(i)}`;e.send(s,...t)},on(e,n){var o;s.has(e)||s.set(e,[]),null==(o=s.get(e))||o.push(n)},off(e,n){var o,i;const t=null==(o=s.get(e))?void 0:o.indexOf(n);null!=t&&-1!=t&&(null==(i=s.get(e))||i.splice(t,1))},destroy:e.destroy}}}function r(n,{snakeSpeed:o=3.3,lineWidth:i=8,turnRadius:t=.05,startPositionSpread:s=.5,startingHoleChancePercantage:a=-5,holeDuration:r=10,maxVerticalResolution:l=1080}={}){var c;{let d=function(o,t,s,l=!0){if(o.hasCollided)return;0==o.currentHoleSection&&(o.holeChance>0&&100*Math.random()<o.holeChance?(o.currentHoleSection=r,o.holeChance=a):o.holeChance=o.holeChance+.1);if((l&&(o.position.x<0||o.position.x>n.width||o.position.y<0||o.position.y>n.height)||0!==p.getImageData(o.position.x+(t+i/2)*Math.cos(o.direction),o.position.y+(t+i/2)*Math.sin(o.direction),1,1).data[3])&&(o.hasCollided=!0,o.onCollision()),null!=o.erasePos){p.beginPath(),p.lineCap="square",p.lineWidth=i+3;const e=p.globalCompositeOperation;p.globalCompositeOperation="destination-out",p.moveTo(o.erasePos.x,o.erasePos.y),p.lineTo(o.position.x,o.position.y),p.stroke(),p.closePath(),o.erasePos=null,p.globalCompositeOperation=e}o.currentHoleSection>0&&(o.erasePos=e({},o.position),o.currentHoleSection--),p.beginPath(),p.lineCap="square",p.lineWidth=i,p.strokeStyle=o.color,p.moveTo(o.position.x,o.position.y),o.direction+=o.turn*s,o.position.x+=t*Math.cos(o.direction),o.position.y+=t*Math.sin(o.direction),p.lineTo(o.position.x,o.position.y),p.stroke(),p.closePath()},h=function(){let e=!0,n=performance.now();C&&(C=!1,requestAnimationFrame((function i(s){let a=(s-n)/16.666666666666668;a=a<4?a:4;const r=o*a,l=t*a;n=s;for(const n of f)d(n,r,l,e);e=!e,!C&&requestAnimationFrame(i)})))},u=function(){C=!0};const p=null!=(c=n.getContext("2d",{desynchronized:!0,willReadFrequently:!0}))?c:(()=>{throw new Error("Could not get Snake canvas 2d context")})();if(n.height>l){const e=n.height/l;p.scale(e,e)}const g=n=>e(e({},n),{hasCollided:!1,turn:0,direction:Math.round(360*Math.random()),holeChance:a,position:{x:(Math.random()+s)*(p.canvas.width*s),y:(Math.random()+s)*(p.canvas.height*s)},currentHoleSection:0,erasePos:null}),f=[];let C=!0;return{run:h,stop:u,inputSnakeData:e=>{let n=f.find((n=>n.id===e.id));return null==n&&(n=g(e),f.push(n)),e=>{n.turn=e}},destroy(){u()}}}}export{t as a,i as b,r as c,n as j,o as n,a as s,s as v};
