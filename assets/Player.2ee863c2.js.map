{"version":3,"file":"Player.2ee863c2.js","sources":["../../src/components/Triangle.tsx","../../src/components/PlayerControls.tsx","../../src/components/Input.tsx","../../src/components/Button.tsx","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/hooks/useConnectionForPlayer.ts","../../src/hooks/useStateForPlayer.tsx","../../src/hooks/usePingLatency.ts","../../src/components/Player.tsx"],"sourcesContent":["import { ComponentProps, useMemo } from \"react\";\nimport React from \"react\";\nimport { DEFAULT_COLOR } from \"../constants\";\n\nexport type TriangleDirection = \"up\" | \"down\" | \"left\" | \"right\";\n\ntype Props = {\n  strokeWidth?: number;\n  direction: TriangleDirection;\n} & ComponentProps<\"svg\">;\n\ntype Point = [number, number];\n\nexport default function Triangle({\n  direction,\n  fill,\n  stroke = DEFAULT_COLOR,\n  strokeWidth = 5,\n  ...props\n}: Props) {\n  const points = useMemo(() => {\n    const min = strokeWidth;\n    const half = 50;\n    const max = 100 - strokeWidth;\n    const points = ((): [Point, Point, Point] => {\n      switch (direction) {\n        case \"up\":\n          return [\n            [half, min],\n            [min, max],\n            [max, max]\n          ];\n        case \"down\":\n          return [\n            [min, min],\n            [max, min],\n            [half, max]\n          ];\n        case \"left\":\n          return [\n            [min, half],\n            [max, min],\n            [max, max]\n          ];\n        case \"right\":\n          return [\n            [min, min],\n            [min, max],\n            [max, half]\n          ];\n        default:\n          ((noValue: never) => {\n            throw new Error(`Can't draw triangle in direction \"${noValue}\"`);\n          })(direction);\n      }\n    })();\n    return points.join(\" \");\n  }, [direction, strokeWidth]);\n  return (\n    <svg viewBox=\"0 0 100 100\" style={{width: \"100%\", maxHeight: \"100%\", display: \"block\"}} {...props}>\n      <polygon\n        points={points}\n        strokeWidth={strokeWidth}\n        style={{\n          fill,\n          stroke,\n          strokeLinejoin: \"round\",\n          transition: \"fill 150ms ease-out\"\n        }}\n      />\n    </svg>\n  );\n}\n","import {\n  CSSProperties,\n  useState,\n  SyntheticEvent,\n  PropsWithChildren\n} from \"react\";\nimport React from \"react\";\nimport Triangle, { TriangleDirection } from \"./Triangle\";\nimport useMediaMatch from \"../hooks/useMediaMatch\";\nimport PlayerLayout from \"./Layout\";\n\ntype Props = PropsWithChildren<{\n  latency?: number;\n  color: CSSProperties[\"color\"];\n  setTurn(turn: number): void;\n}>;\n\nexport default function PlayerControls({ setTurn, color, children }: Props) {\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [minusPressed, setMinusPressed] = useState(false);\n  const [plusPressed, setPlusPressed] = useState(false);\n  const arrowDirections = useMediaMatch<[TriangleDirection, TriangleDirection]>(\n    {\n      \"(orientation: landscape)\": [\"left\", \"right\"],\n      \"(orientation: portrait)\": [\"up\", \"down\"]\n    }\n  )[0];\n\n  // I \"layman benchmarked\" using hooks here.\n  // creating a memo with the same code and currentTurn as dep is moot since it's regenerated everytime this renders.\n  // the other option would be to wait until state commital before passing current turn to setTurn (online)\n  // state commits can happen with some delay however, and until this shows a performance issue i see no need.\n  const useInputHandlers = (\n    value: number,\n    setPress: (press: boolean) => void\n  ) => {\n    const handle = (press: boolean) => (ev: SyntheticEvent) => {\n      ev.preventDefault();\n      setPress(press);\n      const newTurnValue = currentTurn + (press ? value : -value);\n      setTurn(newTurnValue);\n      setCurrentTurn(newTurnValue);\n    };\n    return {\n      onPress: handle(true),\n      onRelease: handle(false)\n    };\n  };\n  const turnMinus = useInputHandlers(-1, setMinusPressed);\n  const turnPlus = useInputHandlers(1, setPlusPressed);\n\n  return (\n    <PlayerLayout centered={false}>\n      <TurnButton\n        color={color}\n        direction={arrowDirections?.[0] ?? \"left\"}\n        pressed={minusPressed}\n        handler={turnMinus}\n      />\n      <div>{children}</div>\n      <TurnButton\n        color={color}\n        direction={arrowDirections?.[1] ?? \"right\"}\n        pressed={plusPressed}\n        handler={turnPlus}\n      />\n    </PlayerLayout>\n  );\n}\n\nconst TurnButton = ({\n  color,\n  pressed,\n  handler,\n  direction\n}: {\n  color?: string;\n  pressed: boolean;\n  direction: TriangleDirection;\n  handler: {\n    onPress(e: SyntheticEvent): void;\n    onRelease(e: SyntheticEvent): void;\n  };\n}) => (\n  <div\n    style={{\n      padding: \"0.5em\",\n      flexBasis: \"33%\",\n      alignSelf: \"stretch\",\n      WebkitUserSelect: \"none\",\n      touchAction: \"none\",\n      display: \"flex\",\n    }}\n    onTouchStart={handler.onPress}\n    onTouchEnd={handler.onRelease}\n  >\n    <Triangle\n      direction={direction}\n      stroke={color}\n      fill={pressed ? color : undefined}\n    />\n  </div>\n);\n","import { useMemoMerge } from \"../hooks/useMemoMerge\";\nimport React, { useMemo, CSSProperties, forwardRef } from \"react\";\nimport { DEFAULT_COLOR, DEFAULT_FONT_FAMILY } from \"../constants\";\n\nconst inputStyle = (color = DEFAULT_COLOR): CSSProperties => ({\n  width: \"100%\",\n  background: \"none\",\n  fontSize: \"2.8em\",\n  fontWeight: 900,\n  display: \"block\",\n  border: \"none\",\n  borderBottom: `5px solid ${color}`,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  borderRadius: 0,\n  textAlign: \"center\",\n  padding: \"0.5em 0\",\n  textTransform: \"uppercase\",\n  caretColor: color,\n});\n\nfunction Input(\n  props: React.ComponentProps<\"input\">,\n  ref: React.Ref<HTMLInputElement>\n) {\n  return (\n    <input\n      autoCapitalize=\"characters\"\n      type=\"text\"\n      ref={ref}\n      {...props}\n      style={useMemoMerge([\n        useMemo(() => inputStyle(props.style?.color), [props.style?.color]),\n        props.style\n      ])}\n    />\n  );\n}\n\nexport default forwardRef(Input);\n","import React, {\n  ComponentProps,\n  Ref,\n  CSSProperties,\n  useMemo,\n  forwardRef\n} from \"react\";\nimport { useMemoMerge } from \"../hooks/useMemoMerge\";\nimport { DEFAULT_COLOR, DEFAULT_FONT_FAMILY } from \"../constants\";\n\nconst buttonStyle = (color: string, disabled?: boolean): CSSProperties => ({\n  border: `5px solid ${color}`,\n  color,\n  borderRadius: \"1.5em\",\n  padding: \"0.5em 1.5em\",\n  fontWeight: 900,\n  fontSize: \"1.5em\",\n  fontFamily: DEFAULT_FONT_FAMILY,\n  opacity: disabled ? 0.3 : 1,\n  background: \"none\",\n  transition: \"color 175ms ease-out, border-color 175ms ease-out\"\n});\n\nfunction Button(\n  { color = DEFAULT_COLOR, ...props }: ComponentProps<\"button\">,\n  ref: Ref<HTMLButtonElement>\n) {\n  return (\n    <button\n      ref={ref}\n      {...props}\n      style={useMemoMerge([\n        useMemo(() => buttonStyle(color, props.disabled), [\n          color,\n          props.disabled\n        ]),\n        props.style\n      ])}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default forwardRef(Button);\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { useEffect, useState, useMemo } from \"react\";\nimport * as uuid from \"uuid\";\nimport {\n  MessageChannelToLobby,\n  createMessageChannelToLobby,\n} from \"../messaging/dataChannelMessaging\";\nimport { DEFAULT_RTC_PEER_CONFIG, SIGNALING_URL } from \"../constants\";\nimport useJsonWebsocket from \"./useJsonWebsocket\";\n\ntype Props = {\n  lobbyName: string;\n};\n\nexport default function useConnectionForPlayer({ lobbyName }: Props) {\n  const [lobbyMessageChannel, setLobbyMessageChannel] =\n    useState<MessageChannelToLobby>();\n  //Create id on client session to support reconnecting. This will be a secret between server/client.\n  const playerId = useMemo(() => {\n    const key = `playerId/${lobbyName}`;\n    let sessionId = sessionStorage[key];\n    if (sessionId == null) {\n      sessionId = uuid.v4()\n      sessionStorage[key] = sessionId;\n    }\n    return sessionId;\n  }, [lobbyName]);\n\n  //only keep ws connection before webrtc is established\n  const socket = useJsonWebsocket(\n    lobbyMessageChannel == null ? `${SIGNALING_URL}/${playerId}` : undefined\n  );\n\n  useEffect(() => {\n    if (lobbyMessageChannel != null || socket.status != \"connected\") {\n      return;\n    }\n    const peerConnection = new RTCPeerConnection(DEFAULT_RTC_PEER_CONFIG);\n\n    const channel = peerConnection.createDataChannel(\"Client data channel\", {\n      maxRetransmits: 1,\n      ordered: false,\n    });\n    channel.onopen = () => {\n      const handles = createMessageChannelToLobby(peerConnection, channel);\n      setLobbyMessageChannel(handles);\n    };\n\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate != null) {\n        socket.send({\n          to: lobbyName,\n          from: playerId,\n          data: event.candidate.toJSON(),\n        });\n      }\n    };\n    let peerDisconnectTimeout: number | undefined;\n    peerConnection.oniceconnectionstatechange = () => {\n      //clear disconnect timeout if set.\n      clearTimeout(peerDisconnectTimeout);\n      const disconnect = () =>\n        setLobbyMessageChannel((channel) => {\n          channel?.destroy();\n          return undefined;\n        });\n      switch (peerConnection.iceConnectionState) {\n        case \"disconnected\":\n        case \"failed\": {\n          disconnect();\n          break;\n        }\n      }\n    };\n    socket.addListener(async ({ data }) => {\n      if (data.type === \"answer\") {\n        await peerConnection.setRemoteDescription(data);\n      } else if (\"candidate\" in data) {\n        await peerConnection.addIceCandidate(data);\n      }\n    });\n    peerConnection.createOffer().then(async (offer) => {\n      await peerConnection.setLocalDescription(offer);\n      socket.send({ data: offer, to: lobbyName, from: playerId });\n    });\n  }, [lobbyMessageChannel, lobbyName, socket]);\n\n  return lobbyMessageChannel;\n}\n","import { MessageChannelToLobby } from \"../messaging/dataChannelMessaging\";\nimport { Dispatch, SetStateAction, useState, useEffect, useMemo } from \"react\";\nimport usePingLatency from \"./usePingLatency\";\n\ntype SendType = Parameters<MessageChannelToLobby[\"send\"]>[0];\n\nconst createPlayerFunctions = (\n  setPlayerState: Dispatch<SetStateAction<PlayerState | undefined>>,\n  connection?: MessageChannelToLobby\n) => () => {\n  const sender = <TKey extends SendType>(\n    type: TKey,\n    stateKey?: keyof PlayerState\n  ) => (data: any) => {\n    //Optimistic updates if statekey provided\n    stateKey &&\n      setPlayerState(state => state && { ...state, [stateKey]: data });\n    connection?.send(\n      type,\n      data\n    );\n  };\n  return {\n    setName: sender(\"setName\", \"name\"),\n    setColor: sender(\"setColor\"),\n    setReady: sender(\"setReady\"),\n    setTurn: sender(\"turn\")\n  };\n};\n\nexport default function useStateForPlayer(connection?: MessageChannelToLobby) {\n  const latency = usePingLatency(connection);\n  const [playerState, setPlayerState] = useState<PlayerState>();\n  const [gameState, setGameState] = useState<GameState>();\n  useEffect(() => {\n    if (connection == null) {\n      return;\n    }\n\n    connection.on(\"playerState\", update =>\n      setPlayerState(\n        state =>\n          //assign undefined to the stateupdate and die.\n          ({ ...state, ...update } as PlayerState)\n      )\n    );\n    connection.on(\"gameState\", update =>\n      setGameState(\n        state =>\n          //same here.\n          ({ ...state, ...update } as GameState)\n      )\n    );\n  }, [connection]);\n\n  const playerFunctions = useMemo(\n    createPlayerFunctions(setPlayerState, connection),\n    [connection]\n  );\n  return [\n    playerState && { ...playerState, ...playerFunctions, latency },\n    gameState\n  ] as const;\n}\n","import { useState, useEffect } from \"react\";\nimport { MessageChannel, Converter } from \"../messaging/setupMessageChannel\";\n\n//This is messed up, but by keeping sending ping packages over the channel, latency is keeped consistent and low.\n//If nothing is sent for a couple of deciseconds, latency will start to vary wildly.\n//This might have to do with my router (known to be shitty in the past)\nexport default function usePingLatency(\n  connection?: MessageChannel<\n    { ping: Converter<number> },\n    { ping: Converter<number> }\n  >,\n  tickRateMs = 100,\n  tickReportCount = 40\n) {\n  const [latency, setLatency] = useState<number>();\n  useEffect(() => {\n    if (connection == null) {\n      return;\n    }\n    let sentPings = 0;\n    let receivedPings = 0;\n    const pings = new Uint8Array(tickReportCount);\n    const pingInterval = window.setInterval(() => {\n      if (sentPings > receivedPings) {\n        //A ping is already out, skip sending new ones until it's back.\n        return;\n      }\n      connection.send(\"ping\", performance.now());\n      sentPings++;\n    }, tickRateMs);\n    connection.on(\"ping\", (timeStamp) => {\n      pings[receivedPings] = performance.now() - timeStamp;\n      receivedPings++;\n      if (receivedPings >= tickReportCount) {\n        setLatency(\n          Math.round(pings.reduce((acc, ping) => acc + ping, 0) / receivedPings)\n        );\n        pings.fill(0);\n        receivedPings = 0;\n        sentPings = 0;\n      }\n    });\n    return () => {\n      window.clearInterval(pingInterval);\n      setLatency(undefined);\n    };\n  }, [connection, tickRateMs, tickReportCount]);\n  return latency;\n}\n","import React, { useState, useCallback, useRef } from \"react\";\nimport PlayerControls from \"./PlayerControls\";\nimport PlayerLayout from \"./Layout\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport Banger from \"./Banger\";\nimport useConnectionForPlayer from \"../hooks/useConnectionForPlayer\";\nimport useStateForPlayer from \"../hooks/useStateForPlayer\";\n\ntype Props = {\n  lobbyName: string;\n};\n\ntype ClientPlayer = ReturnType<typeof useStateForPlayer>[0];\n\nexport default function Client({ lobbyName = \"new\" }: Props) {\n  const channel = useConnectionForPlayer({ lobbyName });\n  const [player, gameState] = useStateForPlayer(channel);\n  const renderCore = useCallback(() => {\n    if (player == null) {\n      return <Banger>Connecting</Banger>;\n    }\n    switch (player.state) {\n      case \"joining\":\n        return player.ready ? (\n          <Banger>Waiting</Banger>\n        ) : (\n          <EnterCreds {...player} colors={gameState?.colorAvailability} />\n        );\n      case \"playing\":\n        return (\n          <PlayerControls\n            setTurn={player.setTurn}\n            color={player.color}\n            latency={player.latency}\n          />\n        );\n      case \"dead\":\n        return <Banger>You dead</Banger>;\n    }\n  }, [player, gameState]);\n  return (\n    <PlayerLayout>\n      <Latency latency={player?.latency} />\n      {renderCore()}\n    </PlayerLayout>\n  );\n}\n\nfunction EnterCreds({\n  colors = {},\n  ...props\n}: ClientPlayer & { colors?: GameState[\"colorAvailability\"] }) {\n  const [hasInput, setHasInput] = useState(false);\n  const hasDefaultName = !hasInput && props.name.startsWith(\"Player \");\n  const onChangeInput = useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setHasInput(true);\n      props.setName(ev.target.value);\n    },\n    [props.setName]\n  );\n  const inputRef = useRef<HTMLInputElement>(null);\n  return (\n    <article style={{ textAlign: \"center\", maxWidth: \"95%\", margin: \"auto 0\" }}>\n      <Input\n        ref={inputRef}\n        style={{ color: props.color, margin: \"1em auto\", maxWidth: \"75%\" }}\n        value={hasDefaultName ? \"\" : props.name}\n        onChange={onChangeInput}\n        placeholder={hasDefaultName ? props.name : \"\"}\n        maxLength={10}\n        autoCorrect=\"off\"\n        spellCheck={false}\n      />\n      <section\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\"\n        }}\n      >\n        {Object.entries(colors).map(([color, available]) => {\n          const isPlayerColor = color === props.color;\n          return (\n            <figure\n              key={color}\n              onClick={() => available && props.setColor(color)}\n              style={{\n                boxSizing: \"border-box\",\n                width: 50,\n                height: 50,\n                margin: 15,\n                borderRadius: \"50%\",\n                background: color,\n                transform:\n                  isPlayerColor || !available\n                    ? `scale(${isPlayerColor ? 1.2 : 0.8})`\n                    : undefined,\n                transition:\n                  \"transform 150ms ease-out, box-shadow 150ms ease-out, opacity 75ms ease-out\",\n                opacity: isPlayerColor || available ? 1 : 0.2,\n                boxShadow: isPlayerColor\n                  ? \"inset 0 0 0 5px rgba(0,0,0,0.1)\"\n                  : \"none\"\n              }}\n            >\n              <figcaption style={{ visibility: \"hidden\" }}>{color}</figcaption>\n            </figure>\n          );\n        })}\n      </section>\n      <section style={{ marginTop: \"1.5em\" }}>\n        <Button\n          color={props.color}\n          disabled={!props.name}\n          onClick={() => props.setReady(true)}\n        >\n          Ready!\n        </Button>\n      </section>\n    </article>\n  );\n}\n\nconst Latency = ({ latency }: { latency?: number }) =>\n  latency ? (\n    <span\n      style={{\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        WebkitUserSelect: \"none\"\n      }}\n    >\n      {latency} ms\n    </span>\n  ) : null;\n"],"names":["_a","direction","fill","stroke","DEFAULT_COLOR","strokeWidth","_b","props","points","useMemo","min","max","noValue","Error","join","__spreadValues","viewBox","style","width","maxHeight","display","strokeLinejoin","transition","setTurn","color","children","currentTurn","setCurrentTurn","useState","minusPressed","setMinusPressed","plusPressed","setPlusPressed","arrowDirections","useMediaMatch","(orientation: landscape)","(orientation: portrait)","useInputHandlers","value","setPress","handle","press","ev","preventDefault","newTurnValue","onPress","onRelease","turnMinus","turnPlus","PlayerLayout","centered","TurnButton","pressed","handler","padding","flexBasis","alignSelf","WebkitUserSelect","touchAction","onTouchStart","onTouchEnd","Triangle","forwardRef","ref","__spreadProps","autoCapitalize","type","useMemoMerge","background","fontSize","fontWeight","border","borderBottom","fontFamily","DEFAULT_FONT_FAMILY","borderRadius","textAlign","textTransform","caretColor","getRandomValues","_c","_d","disabled","opacity","buttonStyle","rnds8","Uint8Array","crypto","bind","msCrypto","uuid","REGEX","test","byteToHex","i","push","toString","substr","options","buf","offset","rnds","random","rng","arr","arguments","length","toLowerCase","validate","TypeError","stringify","lobbyName","lobbyMessageChannel","setLobbyMessageChannel","playerId","key","sessionId","sessionStorage","uuid.v4","socket","useJsonWebsocket","SIGNALING_URL","status","peerConnection","RTCPeerConnection","DEFAULT_RTC_PEER_CONFIG","channel","createDataChannel","maxRetransmits","ordered","onopen","handles","createMessageChannelToLobby","onicecandidate","event","candidate","send","to","from","data","toJSON","oniceconnectionstatechange","peerDisconnectTimeout","iceConnectionState","channel2","destroy","addListener","async","setRemoteDescription","addIceCandidate","createOffer","then","offer","setLocalDescription","connection","latency","tickRateMs","tickReportCount","setLatency","sentPings","receivedPings","pings","pingInterval","window","setInterval","performance","now","on","timeStamp","Math","round","reduce","acc","ping","clearInterval","usePingLatency","playerState","setPlayerState","gameState","setGameState","state","update","playerFunctions","sender","stateKey","setName","setColor","setReady","createPlayerFunctions","useConnectionForPlayer","player","useStateForPlayer","renderCore","useCallback","Banger","ready","EnterCreds","colors","colorAvailability","PlayerControls","Latency","_e","_f","hasInput","setHasInput","hasDefaultName","name","startsWith","onChangeInput","target","inputRef","useRef","maxWidth","margin","Input","onChange","placeholder","maxLength","autoCorrect","spellCheck","flexDirection","flexWrap","justifyContent","Object","entries","map","available","isPlayerColor","onClick","boxSizing","height","transform","boxShadow","visibility","marginTop","Button","position","top","right"],"mappings":"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"}