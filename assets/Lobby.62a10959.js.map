{"version":3,"file":"Lobby.62a10959.js","sources":["../../src/hooks/useEffectWithDeps.ts","../../src/hooks/useStateForLobby.ts","../../src/gameCanvas/snakeGameContext.ts","../../src/components/GameRound.tsx","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/index.js","../../node_modules/qr.js/lib/mode.js","../../node_modules/qr.js/lib/8BitByte.js","../../node_modules/qr.js/lib/ErrorCorrectLevel.js","../../node_modules/qr.js/lib/RSBlock.js","../../node_modules/qr.js/lib/BitBuffer.js","../../node_modules/qr.js/lib/math.js","../../node_modules/qr.js/lib/Polynomial.js","../../node_modules/qr.js/lib/util.js","../../node_modules/qr.js/lib/QRCode.js","../../node_modules/react-qr-svg/dist-modules/components/qr-svg.js","../../node_modules/react-qr-svg/dist-modules/index.js","../../src/components/QrCode.tsx","../../src/components/Waiting.tsx","../../src/components/GameSettingsContext.tsx","../../src/hooks/useLocalStorage.ts","../../src/components/Scoreboard.tsx","../../src/components/Lobby.tsx","../../src/hooks/useConnectionForLobby.ts"],"sourcesContent":["import { useEffect, useRef, DependencyList, EffectCallback } from \"react\";\n\nexport default function useEffectWithDeps<Deps extends DependencyList>(\n  effect: (prevDeps?: Deps) => ReturnType<EffectCallback>,\n  deps: Deps\n) {\n  const dependencyRef = useRef<Readonly<Deps>>();\n  useEffect(() => {\n    const prevDeps = dependencyRef.current;\n    dependencyRef.current = deps;\n    return effect(prevDeps);\n  }, deps);\n}\n","import { useState, useMemo, useRef, useEffect } from \"react\";\nimport { PlayerConnections } from \"./useConnectionForLobby\";\nimport useEffectWithDeps from \"./useEffectWithDeps\";\nimport { ALL_COLORS } from \"../constants\";\nimport { extractObjectDiff } from \"../utility\";\n\ntype PlayerStates = { [id: string]: LobbyPlayer };\n\ntype PlayerFunctions = {\n  setState(state: PlayerState[\"state\"]): void;\n  setScore(score: number): void;\n  onTurnInput(callBack: (turn: number) => void): void;\n};\n\nexport type LobbyPlayer = PlayerState &\n  PlayerFunctions & { id: string; timeout?: number };\n\nconst getColorAvailability = (assignedColors: string[] = []) =>\n  ALL_COLORS.reduce((acc, color) => {\n    acc[color] = assignedColors.indexOf(color) === -1;\n    return acc;\n  }, {} as { [color: string]: boolean });\n\n/*\n * The Lobby component is responsible for converting webrtc channels into player objects with state and client messaging.\n */\nexport default function useStateForLobby(clientConnections: PlayerConnections) {\n  const createPlayerModifier =\n    (playerKey: string) => (fn: (prev: LobbyPlayer) => LobbyPlayer) =>\n      setPlayerState(({ [playerKey]: player, ...otherPlayers }) => ({\n        ...otherPlayers,\n        [playerKey]: fn(player),\n      }));\n\n  const [playerStates, setPlayerState] = useState<PlayerStates>({});\n  const [gameState, setGameState] = useState<GameState>({\n    colorAvailability: getColorAvailability(),\n  });\n\n  //Create players from connections\n  useEffectWithDeps(\n    (prevDeps) => {\n      const [prevConnections] = prevDeps ?? [{}];\n      setPlayerState((playerStates) => {\n        const connectionKeys = Object.keys(clientConnections);\n        //Timeout disconnecting players.\n        const disconnectingPlayers = Object.keys(playerStates)\n          .filter((id) => !connectionKeys.includes(id))\n          .map((disconnectId) => {\n            clearTimeout(playerStates[disconnectId]?.timeout);\n            return {\n              ...playerStates[disconnectId],\n              timeout: setTimeout(\n                () =>\n                  setPlayerState(\n                    ({ [disconnectId]: _removePlayer, ...playerStates }) =>\n                      playerStates\n                  ),\n                2000\n              ),\n            };\n          })\n          .reduce((acc, player) => {\n            acc[player.id] = player;\n            return acc;\n          }, {} as PlayerStates);\n\n        //if we get new players, we should update colors.\n        let updatedColorAvailability: typeof gameState[\"colorAvailability\"];\n        let queuespot = 1;\n        const connectedPlayers = connectionKeys.reduce(\n          (acc, connKey, index) => {\n            const prevPlayerState = playerStates[connKey];\n            clearTimeout(prevPlayerState?.timeout);\n            const modifyPlayer = createPlayerModifier(connKey);\n            let playerState =\n              prevPlayerState ??\n              (() => {\n                updatedColorAvailability = updatedColorAvailability ?? {\n                  ...gameState.colorAvailability,\n                };\n                //Create new player if color can be assigned.\n                const assignedColor = Object.entries(\n                  updatedColorAvailability\n                ).find(([_color, avail]) => avail)?.[0];\n                if (assignedColor != null) {\n                  updatedColorAvailability[assignedColor] = false;\n                  return {\n                    id: connKey,\n                    name: `Player ${index + 1}`,\n                    color: assignedColor,\n                    ready: false,\n                    score: 0,\n                    state: \"joining\",\n                    latency: 0,\n                    //By saving the functions here they will be in data communicated through datachannel.\n                    //JSON stringify will fix it further down the line, but it's still a bit shoddy.\n                    setState: (state: PlayerState[\"state\"]) =>\n                      modifyPlayer((player) => ({ ...player, state })),\n                    setScore: (score: number) =>\n                      modifyPlayer((player) => ({ ...player, score })),\n                    onTurnInput: (turner) =>\n                      clientConnections[connKey]?.on(\"turn\", turner),\n                  } as LobbyPlayer;\n                }\n              })();\n            //Connection has no player and no player could be assigned\n            if (playerState == null) {\n              clientConnections[connKey].send(\"err\", {\n                reason: \"lobbyFull\",\n                queuespot,\n              });\n              queuespot++;\n              return acc;\n            }\n            //Wire or re-wire player message handlers for new players or connections\n            const currentConnection = clientConnections[connKey];\n            if (\n              prevPlayerState == null ||\n              currentConnection !== prevConnections[connKey]\n            ) {\n              currentConnection.on(\"setColor\", (color) => {\n                modifyPlayer((player) => ({ ...player, color }));\n              });\n              currentConnection.on(\"setName\", (name) => {\n                modifyPlayer((player) => ({ ...player, name }));\n              });\n              currentConnection.on(\"setReady\", (ready) => {\n                modifyPlayer((player) => ({ ...player, ready }));\n              });\n              playerState = {\n                ...playerState,\n                onTurnInput: (turner) =>\n                  clientConnections[connKey]?.on(\"turn\", turner),\n              };\n            }\n            acc[connKey] = playerState;\n            return acc;\n          },\n          {} as typeof playerStates\n        );\n        return { ...disconnectingPlayers, ...connectedPlayers };\n      });\n    },\n    [clientConnections] as const\n  );\n\n  //Update gamestate colors from player-updates\n  const assignedColors = Object.values(playerStates).map(\n    (player) => player.color\n  );\n  useEffect(() => {\n    setGameState((gameState) => ({\n      ...gameState,\n      colorAvailability: getColorAvailability(assignedColors),\n    }));\n  }, [assignedColors.join(\":\")]);\n\n  //Report individual playerstates to clients\n  useEffectWithDeps(\n    (prevDeps) => {\n      const [prevClientConnections, prevPlayerStates] = prevDeps ?? [];\n      Object.keys(playerStates).forEach((key) => {\n        const newState = playerStates[key];\n        const oldState = prevPlayerStates?.[key];\n        //send complete state if connection changed or state is new\n        if (\n          clientConnections[key] != prevClientConnections?.[key] ||\n          oldState == null\n        ) {\n          clientConnections[key]?.send(\"playerState\", newState);\n        }\n        //send partial state updates to existing connections\n        else if (newState !== oldState) {\n          clientConnections[key]?.send(\n            \"playerState\",\n            extractObjectDiff(oldState, newState, \"function\")\n          );\n        }\n      });\n    },\n    [clientConnections, playerStates] as const\n  );\n\n  //Report gamestate to clients\n  useEffectWithDeps(\n    (prevDeps) => {\n      const [prevClientConnections, prevGameState] = prevDeps ?? [];\n      const stateUpdate =\n        prevGameState !== gameState &&\n        extractObjectDiff(prevGameState, gameState);\n      Object.keys(clientConnections).forEach((id) => {\n        const currentConn = clientConnections[id];\n        //Send complete state to new/updated connections\n        if (currentConn != prevClientConnections?.[id]) {\n          currentConn?.send(\"gameState\", gameState);\n        }\n        //Otherwise send updated state keys only\n        else if (stateUpdate) {\n          currentConn?.send(\"gameState\", stateUpdate);\n        }\n      });\n    },\n    [clientConnections, gameState] as const\n  );\n\n  const players = useMemo(() => Object.values(playerStates), [playerStates]);\n\n  return players;\n}\n","import { inlineThrow } from \"../utility\";\nimport {\n  messagesFromTracker,\n  messagesToTracker,\n  TrackerMessageChannel,\n} from \"../collisionCanvas/collisionCanvasMessaging\";\nimport CollisionTrackerWorker from \"../collisionCanvas/collisionCanvas?worker\";\nimport { createWebWorkerMessageChannel } from \"../messaging/webWorkerMessageChannel\";\n\nexport type SnakeInput = {\n  id: string;\n  color: string;\n  onCollision: () => void;\n};\n\nconst frameTimeSixtyFps = 1000 / 60;\n\nexport type GameInput = Parameters<typeof snakeGameContext>[1];\n\nexport default function snakeGameContext(\n  canvas: HTMLCanvasElement | OffscreenCanvas,\n  {\n    snakeSpeed = 3.3,\n    lineWidth = 8,\n    turnRadius = 0.05,\n    startPositionSpread = 0.5,\n    startingHoleChancePercantage = -5,\n    holeDuration = 10,\n    maxVerticalResolution = 1080,\n    checkCollisions = true,\n    useTrackingCollisionCanvas = false,\n  } = {}\n) {\n  const context =\n    (canvas.getContext(\"2d\", {\n      desynchronized: true,\n      willReadFrequently: true,\n    }) as OffscreenCanvasRenderingContext2D) ??\n    inlineThrow(\"Could not get Snake canvas 2d context\");\n  const scaleFactor =\n    canvas.height > maxVerticalResolution\n      ? canvas.height / maxVerticalResolution\n      : 1;\n  context.scale(scaleFactor, scaleFactor);\n\n  const createNewSnake = (input: SnakeInput) => ({\n    ...input,\n    hasCollided: false,\n    turn: 0,\n    direction: Math.round(Math.random() * 360),\n    holeChance: startingHoleChancePercantage,\n    position: {\n      x:\n        (Math.random() + startPositionSpread) *\n        (context.canvas.width * startPositionSpread),\n      y:\n        (Math.random() + startPositionSpread) *\n        (context.canvas.height * startPositionSpread),\n    },\n    currentHoleSection: 0,\n    erasePos: null as null | { x: number; y: number },\n  });\n\n  const snakes: (ReturnType<typeof createNewSnake> & SnakeInput)[] = [];\n\n  //Create or update snake and return turntrigger\n  const inputSnakeData = (input: SnakeInput) => {\n    let snake = snakes.find((snake) => snake.id === input.id);\n    if (snake == null) {\n      snake = createNewSnake(input);\n      snakes.push(snake);\n    }\n    return (turn: number) => {\n      snake!.turn = turn;\n    };\n  };\n\n  //function for colliding and drawing snake\n  function moveSnake(\n    snake: typeof snakes[0],\n    snakeSpeed: number,\n    turnAngle: number,\n    checkCollision = false\n  ) {\n    if (snake.hasCollided) {\n      return;\n    }\n    if (snake.currentHoleSection == 0) {\n      if (snake.holeChance > 0 && Math.random() * 100 < snake.holeChance) {\n        snake.currentHoleSection = holeDuration;\n        snake.holeChance = startingHoleChancePercantage;\n      } else {\n        snake.holeChance = snake.holeChance + 0.1;\n      }\n    }\n\n    const willCollide =\n      checkCollision &&\n      (snake.position.x < 0 ||\n        snake.position.x > canvas.width ||\n        snake.position.y < 0 ||\n        snake.position.y > canvas.height ||\n        context.getImageData(\n          snake.position.x +\n            (snakeSpeed + lineWidth / 2) * Math.cos(snake.direction),\n          snake.position.y +\n            (snakeSpeed + lineWidth / 2) * Math.sin(snake.direction),\n          1,\n          1\n        ).data[3] !== 0);\n\n    if (willCollide) {\n      snake.hasCollided = true;\n      snake.onCollision();\n    }\n\n    if (snake.erasePos != null) {\n      context.beginPath();\n      context.lineCap = \"square\";\n      context.lineWidth = lineWidth + 3;\n      const prevCompOp = context.globalCompositeOperation;\n      context.globalCompositeOperation = \"destination-out\";\n      context.moveTo(snake.erasePos.x, snake.erasePos.y);\n      context.lineTo(snake.position.x, snake.position.y);\n      context.stroke();\n      context.closePath();\n      snake.erasePos = null;\n      context.globalCompositeOperation = prevCompOp;\n    }\n\n    if (snake.currentHoleSection > 0) {\n      snake.erasePos = { ...snake.position };\n      snake.currentHoleSection--;\n    }\n\n    context.beginPath();\n    context.lineCap = \"square\";\n    context.lineWidth = lineWidth;\n    context.strokeStyle = snake.color;\n    context.moveTo(snake.position.x, snake.position.y);\n    snake.direction += snake.turn * turnAngle;\n    snake.position.x += snakeSpeed * Math.cos(snake.direction);\n    snake.position.y += snakeSpeed * Math.sin(snake.direction);\n    context.lineTo(snake.position.x, snake.position.y);\n    context.stroke();\n    context.closePath();\n  }\n\n  //Setup tracker canvases\n  const trackers: {\n    channel: TrackerMessageChannel;\n    interval: number;\n    latestReport: number;\n  }[] = [];\n  function addTrackingChannel(\n    channel: TrackerMessageChannel,\n    interval: number,\n    //Collision reporting needs to be guarded from this side to disable hacking attempts.\n    reportsCollisions: boolean\n  ) {\n    channel.send(\"canvasInfo\", {\n      width: canvas.width,\n      height: canvas.height,\n      scaleFactor,\n      lineWidth,\n    });\n    trackers.push({ interval, channel, latestReport: 0 });\n    reportsCollisions &&\n      channel.on(\"reportCollision\", (id) => {\n        const snake = snakes.find((snake) => snake.id === id);\n        if (snake) {\n          snake.hasCollided = true;\n          snake.onCollision();\n        }\n      });\n  }\n\n  //Create collision canvas\n  const collisionCanvasWorker =\n    useTrackingCollisionCanvas &&\n    (() => {\n      const collisionCanvasWorker = new CollisionTrackerWorker();\n      collisionCanvasWorker.postMessage(\"SELF_HOST_CANVAS\");\n      const collisionTracker = createWebWorkerMessageChannel(\n        collisionCanvasWorker\n      )(messagesToTracker, messagesFromTracker);\n      addTrackingChannel(collisionTracker, 50, true);\n      return collisionCanvasWorker;\n    })();\n\n  let stopped = true;\n  function run() {\n    let timeStamp = performance.now();\n    let collisionCheckOdd = false;\n    function drawFrame(now: number) {\n      const frameTimeActual = now - timeStamp;\n      let frameTimeOffset = frameTimeActual / frameTimeSixtyFps;\n      //Don't skip too far if we're lagging.\n      frameTimeOffset = frameTimeOffset < 4 ? frameTimeOffset : 4;\n      const frameTimeSnakeSpeed = snakeSpeed * frameTimeOffset;\n      const frameTimeTurnRadius = turnRadius * frameTimeOffset;\n      timeStamp = now;\n      for (let index = 0; index < snakes.length; index++) {\n        moveSnake(\n          snakes[index],\n          frameTimeSnakeSpeed,\n          frameTimeTurnRadius,\n          checkCollisions && !!(index % 2) === collisionCheckOdd\n        );\n      }\n      collisionCheckOdd = !collisionCheckOdd;\n      \n      for (const tracker of trackers) {\n        //do not create redundant position data objects\n        let positionData = null;\n        if (now - tracker.latestReport >= tracker.interval) {\n          positionData ??= snakes\n            .filter((snake) => !snake.hasCollided)\n            .map((snake) => ({\n              id: snake.id,\n              fill: snake.currentHoleSection ? undefined : snake.color,\n              x: snake.position.x,\n              y: snake.position.y,\n            }));\n          tracker.channel.send(\"positionData\", positionData);\n        }\n      }\n      !stopped && requestAnimationFrame(drawFrame);\n    }\n    if (stopped) {\n      stopped = false;\n      requestAnimationFrame(drawFrame);\n    }\n  }\n  function stop() {\n    stopped = true;\n  }\n\n  return {\n    run,\n    stop,\n    inputSnakeData,\n    addTrackingChannel,\n    destroy() {\n      collisionCanvasWorker && collisionCanvasWorker.terminate();\n      stop();\n    },\n  };\n}\n","import React, { useRef, useEffect, CSSProperties, useState } from \"react\";\nimport snakeGameContext, { SnakeInput } from \"../gameCanvas/snakeGameContext\";\n\ntype Props = {\n  run: boolean;\n  input: (SnakeInput & {\n    onTurnInput(callBack: (turn: number) => void): void;\n  })[];\n  children?: React.ReactNode;\n};\n\nconst canvasStyle: CSSProperties = {\n  flexGrow: 1,\n  height: \"100%\",\n  width: \"100%\",\n};\nexport default function GameRound({ run, input, children }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [canvas, setCanvas] = useState<\n    PromiseResult<ReturnType<typeof createSnakeCanvas>>\n  >();\n\n  useEffect(() => {\n    if (canvasRef.current == null || canvas) {\n      return () =>\n        setCanvas((canvas) => {\n          canvas?.destroy();\n          return undefined;\n        });\n    }\n    createSnakeCanvas(canvasRef.current).then((canvas) => {\n      setCanvas(canvas);\n    });\n  }, [canvasRef.current]);\n\n  useEffect(() => {\n    if (canvas == null) {\n      return;\n    }\n    for (const snakeInput of input) {\n      const turner = canvas.inputSnakeData(snakeInput);\n      snakeInput.onTurnInput(turner);\n    }\n  }, [canvas, input]);\n\n  useEffect(() => {\n    if (canvas == null) {\n      return;\n    }\n    run ? canvas.run() : canvas.stop();\n  }, [canvas, run]);\n\n  return <canvas ref={canvasRef} style={canvasStyle} />;\n}\n\nasync function createSnakeCanvas(\n  canvas: HTMLCanvasElement,\n  {\n    maxVerticalResolution = 1080,\n    ...contextOptions\n  }: { maxVerticalResolution?: number } & Parameters<\n    typeof snakeGameContext\n  >[1] = {}\n) {\n  //Create scaled canvas for rendering\n  canvas.style.height = \"100%\";\n  canvas.style.width = \"100%\";\n  if (canvas.clientHeight > maxVerticalResolution) {\n    canvas.height = maxVerticalResolution;\n    canvas.width =\n      (maxVerticalResolution / canvas.clientHeight) * canvas.clientWidth;\n  } else {\n    canvas.height = canvas.clientHeight;\n    canvas.width = canvas.clientWidth;\n  }\n\n  //If possibly to create gamecontext offscreen, in seperate web-worker, do so. Otherwise initialize it directly.\n  const gameContext = await (\"OffscreenCanvas\" in window && false\n    ? //Load offscreen script lazily to delay worker instantion until necessary\n      (await import(\"../gameCanvas/offscreenGame\")).default\n    : snakeGameContext)(canvas, contextOptions);\n\n  return {\n    ...gameContext,\n    destroy() {\n      gameContext.destroy();\n    },\n  };\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","module.exports = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n","var mode = require('./mode');\n\nfunction QR8bitByte(data) {\n\tthis.mode = mode.MODE_8BIT_BYTE;\n\tthis.data = data;\n}\n\nQR8bitByte.prototype = {\n\n\tgetLength : function(buffer) {\n\t\treturn this.data.length;\n\t},\n\t\n\twrite : function(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n};\n\nmodule.exports = QR8bitByte;\n\n","module.exports = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n","// ErrorCorrectLevel\nvar ECL = require('./ErrorCorrectLevel');\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n\n\t// L\n\t// M\n\t// Q\n\t// H\n\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n}\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase ECL.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase ECL.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase ECL.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase ECL.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n}\n\nmodule.exports = QRRSBlock;\n","function QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\nmodule.exports = QRBitBuffer;\n","var QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\nmodule.exports = QRMath;\n","var math = require('./math');\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nmodule.exports = QRPolynomial;\n","var Mode = require('./mode');\nvar Polynomial = require('./Polynomial');\nvar math = require('./math');\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nmodule.exports = QRUtil;\n","var BitByte = require('./8BitByte');\nvar RSBlock = require('./RSBlock');\nvar BitBuffer = require('./BitBuffer');\nvar util = require('./util');\nvar Polynomial = require('./Polynomial');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode.prototype;\n\nproto.addData = function(data) {\n\tvar newData = new BitByte(data);\n\tthis.dataList.push(newData);\n\tthis.dataCache = null;\n};\n\nproto.isDark = function(row, col) {\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\tthrow new Error(row + \",\" + col);\n\t}\n\treturn this.modules[row][col];\n};\n\nproto.getModuleCount = function() {\n\treturn this.moduleCount;\n};\n\nproto.make = function() {\n\t// Calculate automatically typeNumber if provided is < 1\n\tif (this.typeNumber < 1 ){\n\t\tvar typeNumber = 1;\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\tvar buffer = new BitBuffer();\n\t\t\tvar totalDataCount = 0;\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\tvar data = this.dataList[i];\n\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\tdata.write(buffer);\n\t\t\t}\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.typeNumber = typeNumber;\n\t}\n\tthis.makeImpl(false, this.getBestMaskPattern() );\n};\n\nproto.makeImpl = function(test, maskPattern) {\n\t\n\tthis.moduleCount = this.typeNumber * 4 + 17;\n\tthis.modules = new Array(this.moduleCount);\n\t\n\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\n\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t}\n\t}\n\n\tthis.setupPositionProbePattern(0, 0);\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\tthis.setupPositionAdjustPattern();\n\tthis.setupTimingPattern();\n\tthis.setupTypeInfo(test, maskPattern);\n\t\n\tif (this.typeNumber >= 7) {\n\t\tthis.setupTypeNumber(test);\n\t}\n\n\tif (this.dataCache == null) {\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t}\n\n\tthis.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function(row, col)  {\n\t\n\tfor (var r = -1; r <= 7; r++) {\n\t\t\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\n\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\t\t\n\t}\t\t\n};\n\nproto.getBestMaskPattern = function() {\n\n\tvar minLostPoint = 0;\n\tvar pattern = 0;\n\n\tfor (var i = 0; i < 8; i++) {\n\t\t\n\t\tthis.makeImpl(true, i);\n\n\t\tvar lostPoint = util.getLostPoint(this);\n\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\tminLostPoint = lostPoint;\n\t\t\tpattern = i;\n\t\t}\n\t}\n\n\treturn pattern;\n};\n\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\tvar cs = 1;\n\n\tthis.make();\n\n\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\n\t\tvar y = row * cs;\n\t\t\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\tvar x = col * cs;\n\t\t\tvar dark = this.modules[row][col];\n\t\t\n\t\t\tif (dark) {\n\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\tqr_mc.endFill();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn qr_mc;\n};\n\nproto.setupTimingPattern = function() {\n\t\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\tif (this.modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[r][6] = (r % 2 == 0);\n\t}\n\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\tif (this.modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[6][c] = (c % 2 == 0);\n\t}\n};\n\nproto.setupPositionAdjustPattern = function() {\n\n\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\n\tfor (var i = 0; i < pos.length; i++) {\n\t\n\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\n\t\t\tvar row = pos[i];\n\t\t\tvar col = pos[j];\n\t\t\t\n\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nproto.setupTypeNumber = function(test) {\n\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t}\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n};\n\nproto.setupTypeInfo = function(test, maskPattern) {\n\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\tvar bits = util.getBCHTypeInfo(data);\n\n\t// vertical\t\t\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n\t\tif (i < 6) {\n\t\t\tthis.modules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tthis.modules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\tif (i < 8) {\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tthis.modules[this.moduleCount - 8][8] = (!test);\n};\n\nproto.mapData = function(data, maskPattern) {\n\t\n\tvar inc = -1;\n\tvar row = this.moduleCount - 1;\n\tvar bitIndex = 7;\n\tvar byteIndex = 0;\n\t\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\tif (col == 6) col--;\n\n\t\twhile (true) {\n\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\n\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new BitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n};\n\nmodule.exports = QRCode;\n\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.QRCode = QRCode;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar QRCodeImpl = require(\"qr.js/lib/QRCode\");\nvar ErrorCorrectLevel = require(\"qr.js/lib/ErrorCorrectLevel\");\n\nfunction QRCode() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref$value = _ref.value,\n        value = _ref$value === undefined ? \"\" : _ref$value,\n        _ref$level = _ref.level,\n        level = _ref$level === undefined ? \"L\" : _ref$level,\n        _ref$bgColor = _ref.bgColor,\n        bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\n        _ref$fgColor = _ref.fgColor,\n        fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\n        _ref$cellClassPrefix = _ref.cellClassPrefix,\n        cellClassPrefix = _ref$cellClassPrefix === undefined ? \"\" : _ref$cellClassPrefix,\n        otherProps = _objectWithoutProperties(_ref, [\"value\", \"level\", \"bgColor\", \"fgColor\", \"cellClassPrefix\"]);\n\n    // adapted from https://github.com/zpao/qrcode.react/blob/master/src/index.js\n    var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n    qrcode.addData(value);\n    qrcode.make();\n\n    var cells = qrcode.modules;\n\n    var cellClassName = cellClassPrefix && cellClassPrefix + \"-cell\";\n    var emptyCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-empty\";\n    var filledCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-filled\";\n\n    var cellIndex = 0; // we use simple order as a key just to avoid the key warning here\n\n    return _react2.default.createElement(\n        \"svg\",\n        _extends({\n            shapeRendering: \"crispEdges\",\n            viewBox: [0, 0, cells.length, cells.length].join(\" \")\n        }, otherProps),\n        cells.map(function (row, rowIndex) {\n            return row.map(function (cell, colIndex) {\n                var className = cell ? filledCellClassName : emptyCellClassName;\n                var classNameProp = className ? { className: className } : null;\n\n                // Only use the fill if no cellClassPrefix was set. See https://github.com/no23reason/react-qr-svg/issues/136 for reasoning.\n                var fill = !classNameProp && (cell ? fgColor : bgColor);\n                var styleProp = fill ? { style: { fill: fill } } : null;\n                return _react2.default.createElement(\"rect\", _extends({\n                    height: 1,\n                    key: cellIndex++ // string was too slow here\n                }, styleProp, classNameProp, {\n                    width: 1,\n                    x: colIndex,\n                    y: rowIndex\n                }));\n            });\n        })\n    );\n}\n\nQRCode.propTypes = {\n    value: _propTypes2.default.string.isRequired,\n    size: _propTypes2.default.number,\n    level: _propTypes2.default.oneOf([\"L\", \"M\", \"Q\", \"H\"]),\n    bgColor: _propTypes2.default.string,\n    fgColor: _propTypes2.default.string,\n    cellClassPrefix: _propTypes2.default.string\n};","\"use strict\";\n\nvar _qrSvg = require(\"./components/qr-svg\");\n\nmodule.exports = { QRCode: _qrSvg.QRCode };","import { QRCode as Qr } from \"react-qr-svg\";\nimport React from \"react\";\ntype Props = {\n  style?: React.CSSProperties;\n  colorScheme?: \"onDarkBg\" | \"onWhiteBg\";\n  padding?: number;\n  children: string;\n};\n\nexport default function QrCode({\n  children,\n  style,\n}: Props) {\n  return (\n    <Qr\n      value={children}\n      bgColor=\"white\"\n      fgColor=\"black\"\n      style={{\n        backgroundColor: \"white\",\n        display: \"block\",\n        position: \"relative\",\n        ...style,\n      }}\n      preserveAspectRatio=\"xMidYMax slice\"\n    />\n  );\n}\n","import React, { CSSProperties, useEffect, useState } from \"react\";\nimport Layout from \"./Layout\";\nimport QrCode from \"./QrCode\";\n\ntype Props = {\n  url: string;\n  players: { id: string; name: string; color: string; ready: boolean }[];\n};\n\nconst verticalFlex: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"start\",\n};\n\nexport default function Waiting({ url, players }: Props) {\n  return (\n    <Layout>\n      <div />\n      <div\n        style={{\n          width: \"50%\",\n          maxHeight: \"75%\",\n        }}\n      >\n        <QrCode\n          colorScheme=\"onWhiteBg\"\n          padding={2}\n          style={{\n            maxWidth: 600,\n            maxHeight: 600,\n            margin: \"0 auto 2em auto\",\n          }}\n        >\n          {url}\n        </QrCode>\n        <a\n        href={url}\n        style={{\n          textAlign: \"center\",\n          display: \"block\",\n          fontSize: \"0.8em\",\n          marginTop: \"0.8em\",\n          alignSelf: \"center\",\n        }}\n      >\n        {url}\n      </a>\n      </div>\n      <div\n        style={{\n          ...verticalFlex,\n          width: 0,\n          flexGrow: players.length ? 0.5 : 0,\n          transition: \"flex-grow 500ms ease-in\",\n        }}\n      >\n        {players.map((player) => (\n          <PlayerItem key={player.id} {...player} />\n        ))}\n      </div>\n    </Layout>\n  );\n}\n\nconst PlayerItem = (player: Props[\"players\"][0]) => {\n  const [rendered, setRendered] = useState(false);\n  useEffect(() => {\n    window.setTimeout(() => setRendered(true), 100);\n  }, []);\n  return (\n    <div\n      style={{\n        opacity: rendered ? 1 : 0,\n        margin: \"1.2em 0\",\n        transition: \"transform 150ms ease-in, opacity 150ms ease-in\",\n        transform: player.ready ? \"scale(1.1) translateX(5%)\" : undefined,\n        animation: \"fadeIn 250ms ease-in, fromRight 500ms ease-in\",\n        minWidth: \"7em\",\n      }}\n      key={player.id}\n    >\n      <h2\n        style={{\n          color: player.color,\n          fontSize: \"3em\",\n          transition: \"color 150ms\",\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        {player.name} {player.ready ? <small>👍</small> : \"  \"}\n      </h2>\n    </div>\n  );\n};\n","import React, {\n  createContext,\n  SetStateAction,\n  Dispatch,\n  PropsWithChildren,\n} from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst defaultSettings = {\n  snakeSpeed: 3.3,\n  lineWidth: 8,\n  turnRadius: 0.05,\n  startPositionSpread: 0.5,\n  startingHoleChancePercantage: -5,\n  holeDuration: 10,\n  maxVerticalResolution: 1080,\n};\n\nexport type GameSettings = typeof defaultSettings;\n\nexport const GameSettingsContext = createContext([\n  defaultSettings,\n  (() => {}) as Dispatch<SetStateAction<GameSettings>>,\n] as const);\n\nexport function GameSettingsProvider({ children }: PropsWithChildren<{}>) {\n  const state = useLocalStorage(\"gameSettings\", defaultSettings);\n  return (\n    <GameSettingsContext.Provider value={state}>\n      {children}\n    </GameSettingsContext.Provider>\n  );\n}\n","import { useMemo, useState, useEffect } from \"react\";\n\nexport default function useLocalStorage<T>(\n  localStorageKey: string,\n  defaultValue: T\n) {\n  //Memo localstorage and json parse, could be expensive in browser\n  const startingValue = useMemo(\n    () =>\n      localStorage?.[localStorageKey]\n        ? JSON.parse(localStorage[localStorageKey])\n        : defaultValue,\n    []\n  );\n  const [state, setState] = useState<T>(startingValue);\n  useEffect(() => {\n    localStorage && (localStorage[localStorageKey] = JSON.stringify(state));\n  }, [state]);\n  return [state, setState] as const;\n}\n","import React from \"react\";\nimport { ALL_COLORS } from \"../constants\";\nimport { LobbyPlayer } from \"../hooks/useStateForLobby\";\nimport QrCode from \"./QrCode\";\n\nexport default function Scoreboard({\n  players,\n  url,\n}: {\n  players: LobbyPlayer[];\n  url: string;\n}) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: -1,\n        right: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          flexGrow: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        {players.map((player) => (\n          <div\n            key={player.id}\n            style={{\n              color: player.color,\n              textAlign: \"right\",\n              margin: \"0 1.5em\",\n              paddingBottom: \"2em\",\n            }}\n          >\n            <div style={{ fontSize: \"5.2em\" }}>{player.score}</div>\n            <div style={{ fontSize: \"1.2em\", whiteSpace: \"nowrap\" }}>\n              {player.name}\n            </div>\n          </div>\n        ))}\n      </div>\n      {ALL_COLORS.length > players.length && (\n        <QrCode\n          colorScheme=\"onWhiteBg\"\n          padding={2}\n          style={{\n            width: 150,\n            height: 150,\n            margin: \"2em\",\n          }}\n        >\n          {url}\n        </QrCode>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport useLobbyConnection from \"../hooks/useConnectionForLobby\";\nimport useStateForLobby, { LobbyPlayer } from \"../hooks/useStateForLobby\";\nimport Banger from \"./Banger\";\nimport GameRound from \"./GameRound\";\nimport Layout from \"./Layout\";\nimport Waiting from \"./Waiting\";\nimport { GameSettingsProvider } from \"./GameSettingsContext\";\nimport Scoreboard from \"./Scoreboard\";\n\ntype PlayerInfo = Pick<LobbyPlayer, \"color\" | \"name\">;\n\ntype GameState =\n  | { type: \"lobby\" }\n  | {\n      type: \"intermission\";\n      roundWinner?: PlayerInfo;\n      gameWinner?: PlayerInfo;\n      remainingTime: number;\n    }\n  | { type: \"playing\"; running: boolean; joinedPlayerIds: string[] };\n\nconst createIntermission = (\n  roundWinner?: PlayerInfo,\n  gameWinner?: PlayerInfo\n): GameState => ({\n  type: \"intermission\",\n  remainingTime: 5,\n  roundWinner,\n  gameWinner,\n});\n\nexport default function Lobby({ lobbyName }: { lobbyName: string }) {\n  const connections = useLobbyConnection(lobbyName);\n  const players = useStateForLobby(connections);\n  return (\n    <GameSettingsProvider>\n      <Game lobbyName={lobbyName} players={players} />\n    </GameSettingsProvider>\n  );\n}\n\nexport function Game({\n  lobbyName,\n  players,\n}: {\n  lobbyName: string;\n  players: LobbyPlayer[];\n}) {\n  const [gameState, setGameState] = useState<GameState>({ type: \"lobby\" });\n\n  const winningScore = useMemo(\n    () => (players.length || 1) * 5,\n    [players.length]\n  );\n\n  //Tick down intermissions to next round\n  useEffect(() => {\n    if (gameState.type !== \"intermission\") {\n      return;\n    }\n    if (gameState.remainingTime) {\n      const timeout = setTimeout(() => {\n        setGameState({\n          ...gameState,\n          remainingTime: gameState.remainingTime - 1,\n        });\n        return () => clearTimeout(timeout);\n      }, 1000);\n    } else {\n      //Start next round\n      setGameState({\n        type: \"playing\",\n        running: true,\n        joinedPlayerIds: players\n          .filter((player) => player.ready)\n          .map((player) => {\n            player.setState(\"playing\");\n            return player.id;\n          }),\n      });\n    }\n  }, [gameState]);\n\n  //Player join effect\n  useEffect(() => {\n    //if all players ready when in lobby, start game\n    if (\n      gameState.type === \"lobby\" &&\n      players.length &&\n      players.every((player) => player.ready)\n    ) {\n      setGameState(createIntermission());\n    }\n    //Go back to lobby, if no ready players are joined.\n    if (gameState.type !== \"lobby\" && !players.some((player) => player.ready)) {\n      setGameState({ type: \"lobby\" });\n    }\n  }, [players, gameState.type]);\n\n  //Group all joined and alive players\n  const playersInGame = useMemo(() => {\n    if (gameState.type !== \"playing\") {\n      return null;\n    }\n    const joined = players.filter((player) =>\n      gameState.joinedPlayerIds.includes(player.id)\n    );\n    return {\n      joined,\n      alive: joined.filter((otherPlayer) => otherPlayer.state === \"playing\"),\n    };\n  }, [gameState.type, players]);\n\n  //Finish ongoing round if someone won or no ones alive or playing\n  useEffect(() => {\n    if (!playersInGame) {\n      return;\n    }\n    const aliveCount = playersInGame.alive.length;\n    //Allow one player to skrrrt around without declaring them victor.\n    const isOneAliveButSinglePlayer =\n      aliveCount === 1 && playersInGame.joined.length === 1;\n    if (aliveCount <= 1 && !isOneAliveButSinglePlayer) {\n      //We have a winner!\n      setGameState((state) => ({ ...state, running: false }));\n      const playerWithMaxScore = playersInGame.joined.reduce(\n        (maxPlayer, player) =>\n          player.score > (maxPlayer?.score ?? 0) ? player : maxPlayer,\n        null as LobbyPlayer | null\n      );\n      window.setTimeout(() => {\n        setGameState((state) =>\n          state.type === \"playing\"\n            ? createIntermission(\n                playersInGame.alive[0] ?? { color: \"inherit\", name: \"Nobody\" },\n                (playerWithMaxScore?.score ?? 0) > winningScore\n                  ? (playerWithMaxScore as LobbyPlayer)\n                  : undefined\n              )\n            : state\n        );\n      }, 1000);\n    }\n  }, [playersInGame]);\n\n  //When someone crashes, set state to that player as crashed and give everyone else a score.\n  const onSnakeDeath = (player: LobbyPlayer) => {\n    if (playersInGame == null) {\n      return;\n    }\n    player.setState(\"dead\");\n    playersInGame.alive\n      .filter((p) => p.id !== player.id)\n      .forEach((otherPlayer) => otherPlayer.setScore(otherPlayer.score + 1));\n  };\n\n  //Create new input for game when players changes.\n  const gameInput = useMemo(\n    () =>\n      gameState.type === \"playing\"\n        ? players\n            .filter((player) => gameState.joinedPlayerIds.includes(player.id))\n            .map((player) => ({\n              id: player.id,\n              color: player.color,\n              onCollision: () => onSnakeDeath(player),\n              onTurnInput: player.onTurnInput,\n            }))\n        : [],\n    [gameState.type, players]\n  );\n\n  const url = `${window.location.protocol}//${window.location.host}${window.location.pathname}#${lobbyName}`;\n  switch (gameState.type) {\n    case \"lobby\": {\n      return <Waiting players={players} url={url} />;\n    }\n    case \"playing\": {\n      return (\n        <Layout>\n          <GameRound input={gameInput} run={gameState.running} />\n          <Scoreboard players={players} url={url} />\n        </Layout>\n      );\n    }\n    case \"intermission\": {\n      const intermissionMessage =\n        gameState.gameWinner != null ? (\n          <Banger>\n            <span style={{ color: gameState.gameWinner.color }}>\n              {gameState.gameWinner.name}\n            </span>{\" \"}\n            wins the game!\n          </Banger>\n        ) : gameState.remainingTime <= 3 ? (\n          <Banger key=\"countdown\">\n            {gameState.roundWinner ? \"Next round\" : \"Game starts\"} in{\" \"}\n            <span style={{ width: \"1em\", display: \"inline-block\" }}>\n              {gameState.remainingTime}\n            </span>\n          </Banger>\n        ) : gameState.roundWinner ? (\n          <Banger>\n            <span\n              style={{\n                color: gameState.roundWinner.color,\n              }}\n            >\n              {gameState.roundWinner.name}\n            </span>{\" \"}\n            survives\n          </Banger>\n        ) : (\n          <Banger>Get ready</Banger>\n        );\n      return (\n        <Layout key={gameState.remainingTime > 3 ? \"message\" : \"countdown\"}>\n          {intermissionMessage}\n        </Layout>\n      );\n    }\n  }\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { DEFAULT_RTC_PEER_CONFIG, SIGNALING_URL } from \"../constants\";\nimport {\n  createMessageChannelToPlayer,\n  MessageChannelToPlayer,\n} from \"../messaging/dataChannelMessaging\";\nimport useJsonWebsocket from \"./useJsonWebsocket\";\n\nexport type PlayerConnections = {\n  [id: string]: MessageChannelToPlayer;\n};\n\nexport default function useLobbyConnection(lobbyName: string) {\n  const [clientConnections, setClientConnections] = useState<{\n    [id: string]: [RTCPeerConnection, MessageChannelToPlayer];\n  }>({});\n\n  const socket = useJsonWebsocket(`${SIGNALING_URL}/${lobbyName}`);\n\n  const removeStaleConnection = useCallback(\n    (staleConnection: RTCPeerConnection) => {\n      setClientConnections((connections) =>\n        Object.keys(connections).reduce((acc, key) => {\n          if (connections[key]?.[0] !== staleConnection) {\n            acc[key] = connections[key];\n          } else {\n            try {\n              connections[key][1].destroy();\n            } catch (err) {\n              console.error(\"Error cleaning up stale connection\", err);\n            }\n          }\n          return acc;\n        }, {} as typeof clientConnections)\n      );\n    },\n    [setClientConnections]\n  );\n\n  useEffect(() => {\n    if (socket.status !== \"connected\") {\n      return;\n    }\n\n    const unbindSocketListener = socket.addListener(\n      async ({ from: offerFrom, data }) => {\n        if (data.type !== \"offer\" || offerFrom == null) {\n          return;\n        }\n        const clientConnection = new RTCPeerConnection(DEFAULT_RTC_PEER_CONFIG);\n\n        clientConnection.onicecandidate = (event) =>\n          event.candidate != null &&\n          socket.send({\n            to: offerFrom,\n            data: event.candidate.toJSON(),\n          });\n        const unbindPeerSignaling = socket.addListener(\n          ({ from: candidateFrom, data }) =>\n            candidateFrom === offerFrom &&\n            \"candidate\" in data &&\n            clientConnection.addIceCandidate(data)\n        );\n        const closeConnection = () => {\n          unbindPeerSignaling?.();\n          removeStaleConnection(clientConnection);\n        };\n        clientConnection.ondatachannel = ({ channel }: RTCDataChannelEvent) => {\n          channel.onclose = closeConnection;\n          setClientConnections((connections) => ({\n            ...connections,\n            [offerFrom]: [\n              clientConnection,\n              createMessageChannelToPlayer(clientConnection, channel),\n            ],\n          }));\n        };\n        clientConnection.onconnectionstatechange = () => {\n          const state = clientConnection.connectionState;\n          if (state == \"disconnected\") {\n            closeConnection();\n          }\n        };\n        await clientConnection.setRemoteDescription(\n          new RTCSessionDescription(data)\n        );\n        const localDescription = await clientConnection.createAnswer();\n        await clientConnection.setLocalDescription(localDescription);\n        socket.send({ data: localDescription, to: offerFrom });\n      }\n    );\n    return unbindSocketListener;\n  }, [socket]);\n\n  const playerConnections = useMemo(\n    () =>\n      Object.entries(clientConnections).reduce((acc, [key, value]) => {\n        acc[key] = value[1];\n        return acc;\n      }, {} as PlayerConnections),\n    [clientConnections]\n  );\n\n  return playerConnections;\n}\n"],"names":["effect","deps","dependencyRef","useRef","prevDeps","current","getColorAvailability","assignedColors","ALL_COLORS","reduce","acc","color","indexOf","clientConnections","playerStates","setPlayerState","useState","gameState","setGameState","colorAvailability","prevConnections","playerStates2","connectionKeys","Object","keys","disconnectingPlayers","filter","id","includes","map","disconnectId","timeout","__spreadProps","setTimeout","_a2","_removePlayer","_b","__restKey","player","updatedColorAvailability","queuespot","connectedPlayers","connKey","index","prevPlayerState","modifyPlayer","playerKey","fn","_a","otherPlayers","playerState","__spreadValues","assignedColor","entries","find","_color","avail","name","ready","score","state","latency","setState","setScore","onTurnInput","turner","on","send","reason","currentConnection","values","gameState2","join","prevClientConnections","prevPlayerStates","forEach","key","newState","oldState","extractObjectDiff","prevGameState","stateUpdate","currentConn","useMemo","canvas","snakeSpeed","lineWidth","turnRadius","startPositionSpread","startingHoleChancePercantage","holeDuration","maxVerticalResolution","checkCollisions","useTrackingCollisionCanvas","context","getContext","desynchronized","willReadFrequently","inlineThrow","scaleFactor","height","scale","snakes","snake","snakeSpeed2","turnAngle","checkCollision","hasCollided","currentHoleSection","holeChance","Math","random","position","x","width","y","getImageData","cos","direction","sin","data","onCollision","erasePos","beginPath","lineCap","prevCompOp","globalCompositeOperation","moveTo","lineTo","stroke","closePath","strokeStyle","turn","trackers","channel","interval","reportsCollisions","push","latestReport","snake2","collisionCanvasWorker","collisionCanvasWorker2","CollisionTrackerWorker","postMessage","createWebWorkerMessageChannel","messagesToTracker","messagesFromTracker","stopped","run","timeStamp","performance","now","collisionCheckOdd","frameTimeOffset","frameTimeSnakeSpeed","frameTimeTurnRadius","length","tracker","positionData","fill","requestAnimationFrame","drawFrame","stop","inputSnakeData","input","round","createNewSnake","addTrackingChannel","[object Object]","terminate","canvasStyle","flexGrow","children","canvasRef","setCanvas","canvas2","destroy","async","contextOptions","style","clientHeight","clientWidth","gameContext","window","snakeGameContext","then","snakeInput","ref","emptyFunctionWithReset","resetWarningCache","emptyFunction","props","propName","componentName","location","propFullName","secret","err","Error","shim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","getShim","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$0","mode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","QR8bitByte","prototype","getLength","buffer","this","write","i","put","charCodeAt","_8BitByte","ErrorCorrectLevel","L","M","Q","H","ECL","totalCount","dataCount","QRRSBlock","RS_BLOCK_TABLE","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","list","Array","count","j","RSBlock","QRBitBuffer","get","bufIndex","floor","num","putBit","getLengthInBits","bit","BitBuffer","QRMath","glog","n","LOG_TABLE","gexp","EXP_TABLE","math","shift","offset","QRPolynomial","multiply","e","mod","ratio","Mode","Polynomial","require$$2","QRMaskPattern","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHTypeInfo","d2","getBCHDigit","getBCHTypeNumber","digit","getPatternPosition","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","mode2","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","BitByte","require$$1","util","modules","dataCache","dataList","proto","QRCode","addData","newData","make","rsBlocks","totalDataCount","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y2","beginFill","endFill","pos","bits","inc","bitIndex","byteIndex","PAD0","PAD1","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","modPoly","modIndex","totalCodeCount","QRCode_1","defineProperty","qrSvg","value","_extends","assign","target","arguments","source","hasOwnProperty","call","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","QRCodeImpl","require$$3","_ref","_ref$value","_ref$level","level","_ref$bgColor","bgColor","_ref$fgColor","fgColor","_ref$cellClassPrefix","cellClassPrefix","otherProps","_objectWithoutProperties","qrcode","cells","cellClassName","emptyCellClassName","filledCellClassName","cellIndex","createElement","shapeRendering","viewBox","rowIndex","cell","colIndex","className","classNameProp","styleProp","propTypes","size","distModules","Qr","backgroundColor","display","preserveAspectRatio","verticalFlex","flexDirection","justifyContent","alignItems","url","players","Layout","maxHeight","QrCode","colorScheme","padding","maxWidth","margin","href","textAlign","fontSize","marginTop","alignSelf","transition","PlayerItem","rendered","setRendered","opacity","transform","animation","minWidth","whiteSpace","defaultSettings","GameSettingsContext","createContext","localStorageKey","defaultValue","startingValue","JSON","parse","localStorage","stringify","useLocalStorage","Provider","zIndex","right","paddingBottom","createIntermission","roundWinner","gameWinner","remainingTime","lobbyName","useStateForLobby","setClientConnections","socket","useJsonWebsocket","SIGNALING_URL","removeStaleConnection","useCallback","staleConnection","connections","error","status","addListener","from","offerFrom","clientConnection","RTCPeerConnection","DEFAULT_RTC_PEER_CONFIG","onicecandidate","event","candidate","to","toJSON","unbindPeerSignaling","candidateFrom","data2","addIceCandidate","closeConnection","ondatachannel","onclose","createMessageChannelToPlayer","onconnectionstatechange","connectionState","setRemoteDescription","RTCSessionDescription","localDescription","createAnswer","setLocalDescription","useLobbyConnection","GameSettingsProvider","Game","winningScore","clearTimeout","running","joinedPlayerIds","every","some","playersInGame","joined","alive","otherPlayer","aliveCount","isOneAliveButSinglePlayer","playerWithMaxScore","maxPlayer","gameInput","p","onSnakeDeath","protocol","host","pathname","Waiting","GameRound","Scoreboard","intermissionMessage","Banger"],"mappings":"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"}